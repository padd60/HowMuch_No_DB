{"version":3,"sources":["img/banner.svg","img/noImage.svg","components/ItemCard.js","img/board.png","img/point.png","img/value.png","components/Mainpage.js","components/LoginPage.js","components/Account.js","img/welcome.svg","components/Welcome.js","components/BoardMain.js","components/Register.js","components/Modify.js","components/ReplyPagination.js","components/BoardListPagination.js","components/DetailBoard.js","components/Mypage.js","components/HotBoardMain.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["ItemCard","props","tierObject","tier","color","style","margin","cursor","Card","width","padding","Img","variant","src","item","imageList","noImage","border","height","objectFit","objectPosition","Body","display","Title","textAlign","backgroundColor","borderRadius","overflow","textOverflow","whiteSpace","title","maxWidth","userTier","console","log","findItem","find","findTier","point","tierSelect","writer","alignItems","marginBottom","fontSize","borderBottom","fontFamily","fontWeight","suggestion","toString","replace","marginTop","tag","tagList","map","index","marginRight","Mainpage","checkLogin","a","axios","get","then","result","SetCheckUser","data","catch","err","useState","checkUser","dispatch","useDispatch","readList","res","type","payload","readHotList","useEffect","state","useSelector","boardState","boardReducer","hotBoardState","hotBoardReducer","hotBoard","slice","newBoard","csrf","Cookies","loginShow","setloginShow","handleLoginClose","handleLoginShow","currentImageWidth","document","documentElement","clientWidth","imageWidth","imageWidthChange","rowAlign","rowAlignChange","window","addEventListener","screenWidth","navigate","useNavigate","scrollTo","TbtnOpa","TbtnOpaChange","screenScroll","scrollTop","Jumbo","styled","Line","GuideText","GuideTitle","NumberBox","Footer","TopBtn","Navbar","fixed","expand","className","onClick","Brand","paddingTop","Toggle","aria-controls","Collapse","id","Nav","Link","action","method","getElementById","submit","name","value","position","paddingBottom","top","left","Banner","alt","bottom","Button","onMouseEnter","setAttribute","onMouseLeave","justifyContent","length","bno","BoardImg","ValueImg","PointImg","Modal","show","onHide","Header","LoginPage","setPosition","idCheck","SetidCheck","pwCheck","SetpwCheck","idInput","pwInput","form","resetShow","checkValue","input","currentWidth","flexdir","Setflexdir","margindir","Setmargindir","LoginHead","Label","Warn","onKeyUp","event","keyCode","flexFlow","marginLeft","placeholder","paddingLeft","Account","signup","email","pw","nick","url","headers","handleShow","SetcheckSame","setShow","idWarn","SetidWarn","idSame","SetidSame","pwWarn","SetpwWarn","pw2Check","Setpw2Check","pw2Warn","Setpw2Warn","nickCheck","SetnickCheck","nickWarn","SetnickWarn","nickSame","SetnickSame","checkSame","pw2Input","nickInput","margindir1","Setmargindir1","margindir2","Setmargindir2","idSameCheck","error","nickSameCheck","TopTitle","Head","Success","idInputArray","split","nickInputArray","test","paddingRight","Welcome","WelcomeImg","BoardMain","items","select","SetSelect","SetSearch","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","Math","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","aria-label","onChange","e","typeChanger","target","options","selectedIndex","text","defaultValue","search","params","keyword","Register","titleCheck","SettitleCheck","contentCheck","SetcontentCheck","suggestCheck","SetsuggestCheck","imageCheck","SetimageCheck","for","size","hidden","multiple","accept","imgBoxDiv","querySelectorAll","i","parentNode","removeChild","fileArr","files","base64Arr","forEach","reader","FileReader","imgBox","div","createElement","image","del","textContent","onload","dataURL","push","appendChild","append","readAsDataURL","resize","thumbnailURL","postImgURL","attachImgBox","arrAttachImgBox","thumbnailImgTag","titleInput","contentInput","suggestInput","tag1Input","tag2Input","tag3Input","tagArr","number","content","Modify","useParams","findItemBoard","parseInt","currentTarget","ReplyPagination","getMyInfo","SetInfo","userInfo","readReplyList","replyState","replyReducer","loginLikeShow","setloginLikeShow","handleLoginLikeClose","handleLoginLikeShow","Reply","rcontent","replyer","rdate","String","Date","toISOString","mno","rno","relike","redislike","BoardListPagination","read","readValueList","readCalculateValue","readedBoard","checklike","likecolor","dislikecolor","checkdislike","bdate","blike","bdislike","DetailBoard","upreadCount","resetBoolean","oneBoard","oneBoardReducer","valueState","valueReducer","calculateValue","caculateReducer","usercolor","likecolorReducer","setwarnvalueShow","Setwarn","SetwarnDuplication","SetwarnSelfValue","SetwarnMinus","warnvalueshow","handleWarnClose","warn","warnDuplication","warnSelfValue","warnMinus","borderStyle","end","MaxWidth","Text","min","max","lineHeight","rater","price","vdate","avg","rcount","Mypage","pointGap","boardRank","SetboardRank","memberRank","SetmemberRank","getBoardRank","getTierRank","SmallLine","score","HotBoardMain","App","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","actions","ReactDOM","render","StrictMode","basename","URL","process","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e44a275f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.3a2c77b8.svg\";","export default __webpack_public_path__ + \"static/media/noImage.6d8b3bf3.svg\";","import React, { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport noImage from \"../img/noImage.svg\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\n\nconst ItemCard = (props) => {\n  // let tags = props.item.tagList;\n\n  // let tagsArray = tags.split(\",\");\n  // console.log(tagsArray);\n\n  // tier reader\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else if (point >= 1000) {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    } else {\n      return \"Bronze\";\n    }\n  };\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    console.log(userTier);\n\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n\n    console.log(findItem);\n    console.log(findItem.color);\n\n    return findItem.color;\n  };\n\n  // findTier(tierSelect(포인트 데이터))\n  // tier reader end\n\n  return (\n    <div style={{ margin: \"20px auto\", cursor: \"pointer\" }}>\n      <Card style={{ width: \"300px\", color: \"white\", padding: \"10px\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={\n            props.item.imageList === null ? noImage : props.item.imageList[0]\n          }\n          style={{\n            border: \"2px solid #2D4059\",\n            width: \"280px\",\n            height: \"200px\",\n            objectFit: \"cover\",\n            objectPosition: \"50% 0%\",\n          }}\n        />\n        <Card.Body style={{ padding: \"1rem 0\" }}>\n          <div style={{ display: \"flex\" }}>\n            <Card.Title\n              style={{\n                width: \"300px\",\n                height: \"40px\",\n                textAlign: \"left\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {props.item == null ? null : props.item.title}\n            </Card.Title>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <p\n              style={{\n                maxWidth: \"300px\",\n                height: \"40px\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {props.item == null ? null : (\n                <span>\n                  <RiVipCrownFill\n                    color={findTier(tierSelect(props.item.point))}\n                  />{\" \"}\n                  {props.item.writer}\n                </span>\n              )}\n            </p>\n          </div>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <p\n              style={{\n                width: \"70px\",\n                height: \"40px\",\n                backgroundColor: \"#2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginBottom: \"0\",\n              }}\n            >\n              제시가\n            </p>\n            <BsFillCaretRightFill\n              style={{ color: \"#EA5455\", fontSize: \"32px\" }}\n            />\n            <div\n              style={{\n                color: \"black\",\n                width: \"250px\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                fontFamily: \"sans-serif\",\n                fontWeight: \"bold\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {props.item == null\n                ? null\n                : props.item.suggestion\n                ? props.item.suggestion\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" 원\"\n                : \"없음\"}\n            </div>\n          </div>\n          <div style={{ marginTop: \"20px\", textAlign: \"left\" }}>\n            {props.item == null\n              ? null\n              : props.item.tag === \"not\"\n              ? null\n              : props.item.tagList.map((item, index) => {\n                  return (\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        maxWidth: \"280px\",\n                        height: \"40px\",\n                        backgroundColor: \"#2D4059\",\n                        borderRadius: \"5px\",\n                        padding: \"10px\",\n                        marginBottom: \"0\",\n                        marginRight: \"10px\",\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                      }}\n                      key={index}\n                    >\n                      #{item}\n                    </span>\n                  );\n                })}\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default ItemCard;\n","export default __webpack_public_path__ + \"static/media/board.0aea4ddf.png\";","export default __webpack_public_path__ + \"static/media/point.23743b90.png\";","export default __webpack_public_path__ + \"static/media/value.63481ddb.png\";","import React, { useEffect, useState } from \"react\";\nimport { Button, Container, Modal, Nav, Navbar } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SiCashapp } from \"react-icons/si\";\nimport styled from \"styled-components\";\nimport Banner from \"../img/banner.svg\";\nimport ItemCard from \"./ItemCard\";\nimport BoardImg from \"../img/board.png\";\nimport PointImg from \"../img/point.png\";\nimport ValueImg from \"../img/value.png\";\nimport { IoShareSocialSharp } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BiArrowToTop } from \"react-icons/bi\";\nimport Cookies from \"universal-cookie\";\nimport axios from \"axios\";\nimport { userInfo } from \"os\";\n\nconst Mainpage = () => {\n  // redux\n\n  const checkLogin = async () => {\n    await axios\n      .get(\"/checklogin\")\n      .then((result) => {\n        SetCheckUser(result.data);\n        console.log(result.data);\n      })\n      .catch((err) => {\n        console.log(\"please login\");\n      });\n  };\n\n  let [checkUser, SetCheckUser] = useState(\"\");\n\n  let dispatch = useDispatch();\n\n  const readList = async () => {\n    await axios.get(\"/readList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n      dispatch({\n        type: \"readList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readHotList = async () => {\n    await axios.get(\"/hotList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n      dispatch({\n        type: \"readHotList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  useEffect(() => {\n    checkLogin();\n    readList();\n    readHotList();\n  }, []);\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let boardState = state.boardReducer;\n\n  let hotBoardState = state.hotBoardReducer;\n\n  console.log(boardState);\n\n  let hotBoard = [...hotBoardState.slice(0, 3)];\n\n  console.log(hotBoard);\n\n  let newBoard = [...boardState.slice(0, 3)];\n\n  console.log(newBoard);\n\n  // end redux\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n\n  // end cookie\n\n  // modal control\n  const [loginShow, setloginShow] = useState(false);\n\n  const handleLoginClose = () => setloginShow(false);\n  const handleLoginShow = () => setloginShow(true);\n  // modal control end\n\n  let currentImageWidth = document.documentElement.clientWidth;\n\n  let [imageWidth, imageWidthChange] = useState(\"600px\");\n\n  let [rowAlign, rowAlignChange] = useState(\"space-between\");\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 990) {\n      imageWidthChange(\"450px\");\n      rowAlignChange(\"center\");\n    }\n\n    if (screenWidth > 990) {\n      imageWidthChange(\"600px\");\n      rowAlignChange(\"space-between\");\n    }\n  });\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (currentImageWidth <= 990) {\n      imageWidthChange(\"450px\");\n      rowAlignChange(\"center\");\n    }\n  }, [currentImageWidth]);\n\n  let [TbtnOpa, TbtnOpaChange] = useState(0);\n\n  window.addEventListener(\"scroll\", () => {\n    let screenScroll = document.documentElement.scrollTop;\n\n    if (screenScroll > 1000) {\n      TbtnOpaChange(1);\n    }\n\n    if (screenScroll <= 1000) {\n      TbtnOpaChange(0);\n    }\n  });\n\n  // console.log(imageWidth);\n\n  // style component\n\n  let Jumbo = styled(\"div\")`\n    background-color: #ffd460;\n    padding-top: 110px;\n  `;\n\n  let Line = styled(\"div\")`\n    border-bottom: 3px solid #2d4059;\n    margin: 150px auto;\n  `;\n\n  let GuideText = styled(\"div\")`\n    text-align: left;\n    padding: 20px 0 20px 60px;\n  `;\n\n  let GuideTitle = styled(\"div\")`\n    text-align: left;\n    font-size: 28px;\n    display: flex;\n  `;\n\n  let NumberBox = styled(\"span\")`\n    border: 3px solid black;\n    padding: 0 10px;\n    margin-right: 20px;\n    height: 45px;\n  `;\n\n  let Footer = styled(\"div\")`\n    padding-top: 40px;\n    padding-bottom: 40px;\n    background-color: #2d4059;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: center;\n    color: white;\n    text-align: left;\n  `;\n\n  let TopBtn = styled(\"div\")`\n    position: fixed;\n    transition: all 1s;\n    bottom: 30px;\n    right: 30px;\n    width: 40px;\n    height: 40px;\n    background-color: #f07b3f;\n    color: #2d4059;\n    font-size: 24px;\n    border-radius: 7px;\n    cursor: pointer;\n    opacity: ${(props) => props.TbtnOpa};\n  `;\n\n  // end style component\n\n  return (\n    <div>\n      {/* navbar */}\n      <Navbar\n        fixed=\"top\"\n        expand=\"lg\"\n        variant=\"dark\"\n        style={{ backgroundColor: \"#2D4059\" }}\n      >\n        <div className=\"container-fluid\">\n          <div\n            className=\"d-flex align-items-center\"\n            onClick={() => {\n              window.scrollTo(0, 0);\n            }}\n            style={{ cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{\n                color: \"#EA5455\",\n                fontSize: \"70px\",\n                margin: \"0 20px\",\n              }}\n            />\n            <Navbar.Brand\n              style={{\n                color: \"white\",\n                fontSize: \"50px\",\n                paddingTop: \"15px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              How Much ?\n            </Navbar.Brand>\n          </div>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"fixnav basic-navbar-nav\">\n            <Nav\n              className=\"d-flex justify-content-around\"\n              style={{ width: \"400px\" }}\n            >\n              <Nav.Link\n                onClick={() => {\n                  navigate(\"/login\");\n                }}\n                style={{ color: \"white\", fontSize: \"24px\" }}\n              >\n                {checkUser ? (\n                  <form id=\"logout\" action=\"/logout\" method=\"post\">\n                    <span\n                      onClick={() => {\n                        let form = document.getElementById(\"logout\");\n\n                        form.submit();\n                      }}\n                    >\n                      로그아웃\n                    </span>\n                    <input type=\"hidden\" name=\"_csrf\" value={csrf} />\n                  </form>\n                ) : (\n                  <span>로그인</span>\n                )}\n              </Nav.Link>\n              {checkUser ? null : (\n                <Nav.Link\n                  onClick={() => {\n                    navigate(\"/account\");\n                  }}\n                  style={{ color: \"white\", fontSize: \"24px\" }}\n                >\n                  회원가입\n                </Nav.Link>\n              )}\n              <Nav.Link\n                onClick={() => {\n                  navigate(\"/boardmain\");\n                }}\n                style={{ color: \"white\", fontSize: \"24px\" }}\n              >\n                글목록\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  checkUser ? navigate(\"/mypage\") : handleLoginShow();\n                }}\n                style={{ color: \"white\", fontSize: \"24px\" }}\n              >\n                마이 포인트\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n\n      {/* jumbotron */}\n      <Jumbo>\n        <div\n          style={{\n            position: \"relative\",\n            paddingTop: \"100px\",\n            paddingBottom: \"150px\",\n          }}\n        >\n          <p\n            style={{\n              fontSize: \"24px\",\n              position: \"absolute\",\n              top: \"50px\",\n              left: \"50px\",\n            }}\n          >\n            당신이 가진 어떤 것도{\" \"}\n            <span style={{ borderBottom: \"2px solid #EA5455\" }}>\n              재미있는 가치\n            </span>\n            가 된다 !\n          </p>\n          <img src={Banner} alt=\"banner\" style={{ width: imageWidth }} />\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"10px\",\n              left: \"50px\",\n              textAlign: \"left\",\n            }}\n          >\n            <p style={{ fontSize: \"24px\" }}>\n              모든 컨텐츠는 결국 <span style={{ color: \"#EA5455\" }}>사람</span>\n              이니까,\n            </p>\n            <p style={{ fontSize: \"24px\" }}>\n              당신만의 무언가에{\" \"}\n              <span style={{ borderBottom: \"2px solid #EA5455\" }}>\n                가치를 매겨보세요 !\n              </span>\n            </p>\n            <Button\n              id=\"startBtn\"\n              onMouseEnter={() => {\n                let startBtn = document.getElementById(\"startBtn\");\n\n                startBtn.setAttribute(\n                  \"style\",\n                  \"border: none; width: 250px; font-size: 25px; background-color: #EB2A19;\"\n                );\n              }}\n              onMouseLeave={() => {\n                let startBtn = document.getElementById(\"startBtn\");\n\n                startBtn.setAttribute(\n                  \"style\",\n                  \"border: none; width: 250px; font-size: 25px; background-color: #EA5455;\"\n                );\n              }}\n              onClick={() => {\n                if (checkUser) {\n                  navigate(\"/register\");\n                } else {\n                  navigate(\"/login\");\n                }\n              }}\n              style={{\n                backgroundColor: \"#EA5455\",\n                border: \"none\",\n                width: \"250px\",\n                fontSize: \"25px\",\n              }}\n            >\n              시작하기\n            </Button>\n          </div>\n        </div>\n      </Jumbo>\n\n      {/* item list */}\n\n      <div className=\"container-lg\" style={{ margin: \"80px auto\" }}>\n        <div\n          className=\"row\"\n          style={{\n            margin: \"30px 0\",\n            fontSize: \"32px\",\n            display: \"flex\",\n            justifyContent: rowAlign,\n          }}\n        >\n          <div className=\"col-lg-2\">인기 평가물</div>\n          <div\n            className=\"col-lg-2\"\n            onClick={() => {\n              navigate(\"/hotboard\");\n            }}\n            style={{ fontSize: \"24px\", cursor: \"pointer\" }}\n          >\n            + 더보기\n          </div>\n        </div>\n        <div className=\"row\">\n          {hotBoard.length === 0 ? (\n            <p style={{ fontSize: \"20px\" }}>아직 인기 게시물이 없습니다.</p>\n          ) : (\n            hotBoard.map((item, index) => {\n              return (\n                <div\n                  className=\"col-lg-4 d-flex justify-content-center\"\n                  key={index}\n                >\n                  <div\n                    onClick={() => {\n                      navigate(\"/detail/\" + item.bno);\n                      console.log(item);\n                    }}\n                  >\n                    <ItemCard item={item} />\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n      <div className=\"container-lg\" style={{ margin: \"80px auto\" }}>\n        <div\n          className=\"row\"\n          style={{\n            margin: \"30px 0\",\n            fontSize: \"32px\",\n            display: \"flex\",\n            justifyContent: rowAlign,\n          }}\n        >\n          <div className=\"col-lg-2\">새 평가물</div>\n          <div\n            className=\"col-lg-2\"\n            onClick={() => {\n              navigate(\"/boardmain\");\n            }}\n            style={{ fontSize: \"24px\", cursor: \"pointer\" }}\n          >\n            + 더보기\n          </div>\n        </div>\n        <div className=\"row\">\n          {newBoard.length === 0 ? (\n            <p style={{ fontSize: \"20px\" }}>아직 등록된 게시물이 없습니다.</p>\n          ) : (\n            newBoard.map((item, index) => {\n              return (\n                <div\n                  className=\"col-lg-4 d-flex justify-content-center\"\n                  key={index}\n                >\n                  <div\n                    onClick={() => {\n                      navigate(\"/detail/\" + item.bno);\n                      console.log(item);\n                    }}\n                  >\n                    <ItemCard item={item} />\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n\n      <Line className=\"container-lg\"></Line>\n\n      {/* user guide */}\n      <div className=\"container-lg\" style={{ margin: \"80px auto\" }}>\n        <div className=\"row\" style={{ marginBottom: \"120px\" }}>\n          <span style={{ fontSize: \"32px\" }}>\n            우리의 관심사는 당신의 상상력 넘치는{\" \"}\n            <span style={{ color: \"#F07B3F\" }}>모든 것</span>\n          </span>\n        </div>\n        <div\n          className=\"row d-flex justify-content-around\"\n          style={{ marginBottom: \"150px\" }}\n        >\n          <div className=\"col-lg-5\">\n            <GuideTitle>\n              <NumberBox>1</NumberBox> 당신의 어떤 것이든 공유해보세요.\n            </GuideTitle>\n            <GuideText>\n              <p>\n                상상력 넘치는 아이디어, 웃긴 사진, 자신만의 짤, 유용한 정보글\n                혹은 실제 자신의 평가 받고 싶은 물건까지 ... !\n              </p>\n              <p>전부 포스팅하여 가치를 알아보고 실제 포인트로 받아보세요 !</p>\n            </GuideText>\n          </div>\n          <div className=\"col-lg-5\">\n            <img\n              src={BoardImg}\n              alt=\"guideImage\"\n              style={{ width: \"100%\", padding: \"20px\" }}\n            ></img>\n          </div>\n        </div>\n\n        <div\n          className=\"row d-flex justify-content-around\"\n          style={{ marginBottom: \"150px\" }}\n        >\n          <div className=\"col-lg-5\">\n            <GuideTitle>\n              <NumberBox>2</NumberBox>\n              <span> 다른 유저의 모든 것을 평가해보세요.</span>\n            </GuideTitle>\n            <GuideText>\n              <p>\n                자신의 가치만 평가받지 말고 다른 사람의 생각과 물건을 평가하고\n                서로의 생각을 공유해보세요!\n              </p>\n              <p>당신의 평가가 실제 가치가 됩니다.</p>\n            </GuideText>\n          </div>\n          <div className=\"col-lg-5\">\n            <img\n              src={ValueImg}\n              alt=\"guideImage\"\n              style={{ width: \"100%\", padding: \"20px\" }}\n            ></img>\n          </div>\n        </div>\n\n        <div\n          className=\"row d-flex justify-content-around\"\n          style={{ marginBottom: \"150px\" }}\n        >\n          <div className=\"col-lg-5\">\n            <GuideTitle>\n              <NumberBox>3</NumberBox> 가치를 포인트로 받고 사용해보세요.\n            </GuideTitle>\n            <GuideText>\n              <p>\n                평가받은 포인트를 이용해 회원 등급을 올리거나 포인트샵에서\n                다양한 상품을 구매할 수 있습니다.\n              </p>\n            </GuideText>\n          </div>\n          <div className=\"col-lg-5\">\n            <img\n              src={PointImg}\n              alt=\"guideImage\"\n              style={{ width: \"100%\", padding: \"20px\" }}\n            ></img>\n          </div>\n        </div>\n      </div>\n\n      {/* footer */}\n      <Footer className=\"container-fluid\">\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-6\">\n            <IoShareSocialSharp\n              style={{\n                fontSize: \"28px\",\n                marginRight: \"20px\",\n                backgroundColor: \"#EA5455\",\n                padding: \"2px\",\n                borderRadius: \"5px\",\n              }}\n            />\n            소셜네트워크는 준비중에 있습니다.\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-6\" style={{ height: \"250px\" }}>\n            <p>이용약관</p>\n            <p>\n              1. 해당 경매는 재미를 위한 것으로 실제 경매 거래와는 차이가 있음을\n              알립니다.\n            </p>\n            <p>\n              2. 경매된 포인트는 정산 후 익일 지급되며 해당 포인트는 등급,\n              포인트 샵등의 사이트 내에서만 이용이 가능합니다. <br />\n              (추후 기프티콘 연계등의 확장 계획에 있음)\n            </p>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-6\" style={{ height: \"150px\" }}>\n            <p>\n              회사명: howmuch company <br />\n              사업자 등록 번호 : 0000-0000-0000 <br />\n              주소 : 서울시 oooo oooo xxxx xxxx <br />\n              전화번호 : 02-xxx-xxxx\n            </p>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-6\" style={{ height: \"20px\" }}>\n            Copyright©2021 Alright reserved by howmuch\n          </div>\n        </div>\n      </Footer>\n      {/* top btn */}\n      <TopBtn\n        TbtnOpa={TbtnOpa}\n        onClick={() => {\n          window.scrollTo(0, 0);\n        }}\n      >\n        <BiArrowToTop />\n      </TopBtn>\n\n      {/* login modal start */}\n      <Modal\n        show={loginShow}\n        onHide={handleLoginShow}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>⚠️ 로그인이 필요한 서비스입니다! ⚠️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          포인트를 확인하시려면 로그인이 필요합니다.\n          <br />\n          로그인을 하시거나 회원이 아니시라면 회원가입 후 이용 부탁드립니다.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleLoginClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleLoginClose();\n              navigate(\"/login\");\n            }}\n          >\n            로그인하러 가기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* login modal end */}\n    </div>\n  );\n};\n\nexport default Mainpage;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { RiLock2Fill } from \"react-icons/ri\";\nimport { SiCashapp } from \"react-icons/si\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\n\nconst LoginPage = () => {\n  let navigate = useNavigate();\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n  // end cookie\n\n  // let dispatch = useDispatch();\n\n  let [position, setPosition] = useState(\"\");\n\n  const [idCheck, SetidCheck] = useState(false);\n\n  const [pwCheck, SetpwCheck] = useState(false);\n\n  const idInput = document.getElementById(\"ID\");\n  const pwInput = document.getElementById(\"PW\");\n  const form = document.getElementById(\"form\");\n\n  const resetShow = () => {\n    SetidCheck(false);\n\n    SetpwCheck(false);\n  };\n\n  const checkValue = (input) => {\n    console.log(input.value);\n\n    return input.value;\n  };\n\n  let currentWidth = document.documentElement.clientWidth;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (currentWidth > 770) {\n      setPosition(\"absolute\");\n    }\n  }, [currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 770) {\n      setPosition(\"\");\n    }\n\n    if (screenWidth > 770) {\n      setPosition(\"absolute\");\n    }\n  });\n\n  // resize screen\n\n  let [flexdir, Setflexdir] = useState(\"row nowrap\");\n  let [margindir, Setmargindir] = useState(\"-150px\");\n\n  useEffect(() => {\n    if (currentWidth > 1100) {\n      Setflexdir(\"row nowrap\");\n      Setmargindir(\"-150px\");\n    }\n    if (currentWidth <= 1100) {\n      Setflexdir(\"column nowrap\");\n      Setmargindir(\"0px\");\n    }\n  }, [flexdir, currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 1100) {\n      Setflexdir(\"column nowrap\");\n      Setmargindir(\"0px\");\n    }\n\n    if (screenWidth > 1100) {\n      Setflexdir(\"row nowrap\");\n      Setmargindir(\"-150px\");\n    }\n  });\n\n  ///end resize screen\n\n  const enterkey = () => {\n    if (window.event.keyCode === 13) {\n      // 엔터키가 눌렸을 때\n      resetShow();\n\n      if (!checkValue(idInput)) {\n        SetidCheck(true);\n        return;\n      }\n      if (!checkValue(pwInput)) {\n        SetpwCheck(true);\n        return;\n      }\n\n      form.submit();\n    }\n  };\n\n  let LoginHead = styled(\"p\")`\n    font-size: 48px;\n    width: 300px;\n    border-bottom: 2px solid #2d4059;\n  `;\n\n  let Label = styled(\"span\")`\n    font-size: 48px;\n    text-align: center;\n    display: inline-block;\n    width: 210px;\n  `;\n\n  let Warn = styled(\"p\")`\n    color: red;\n  `;\n\n  return (\n    <div onKeyUp={enterkey}>\n      <div className=\"container\" style={{ position: \"relative\" }}>\n        <div\n          onClick={() => {\n            navigate(\"/\");\n          }}\n          style={{\n            position: position,\n            paddingTop: \"80px\",\n            left: \"80px\",\n            cursor: \"pointer\",\n          }}\n        >\n          <SiCashapp\n            style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n          />\n        </div>\n        <div className=\"row\">\n          <form id=\"form\" method=\"post\" action=\"/login\">\n            <div\n              className=\"col d-flex flex-column justify-content-center align-items-center\"\n              style={{ paddingTop: \"80px\" }}\n            >\n              <LoginHead>Login</LoginHead>\n              <p>\n                <RiLock2Fill style={{ fontSize: \"48px\" }} />\n              </p>\n              <p\n                style={{\n                  display: \"flex\",\n                  width: \"70%\",\n                  alignItems: \"center\",\n                  paddingTop: \"80px\",\n                  flexFlow: flexdir,\n                  justifyContent: \"center\",\n                  marginLeft: margindir,\n                }}\n              >\n                <Label>ID(Email)</Label>\n                <input\n                  id=\"ID\"\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"아이디를 입력하세요\"\n                  style={{\n                    width: \"400px\",\n                    height: \"50px\",\n                    fontSize: \"20px\",\n                  }}\n                />\n              </p>\n              {idCheck ? <Warn>이메일을 입력해주세요.</Warn> : null}\n              <p\n                style={{\n                  display: \"flex\",\n                  width: \"70%\",\n                  alignItems: \"center\",\n                  paddingTop: \"30px\",\n                  flexFlow: flexdir,\n                  justifyContent: \"center\",\n                  marginLeft: margindir,\n                }}\n              >\n                <Label>PW</Label>\n                <input\n                  id=\"PW\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"비밀번호를 입력하세요\"\n                  style={{\n                    width: \"400px\",\n                    height: \"50px\",\n                    fontSize: \"20px\",\n                  }}\n                />\n              </p>\n              {/* <input type=\"hidden\" name=\"${_csrf.parameterName }\" value=\"${_csrf.token }\"/> */}\n              {pwCheck ? <Warn>비밀번호를 입력해주세요.</Warn> : null}\n              <p style={{ textAlign: \"right\", width: \"35%\", fontSize: \"20px\" }}>\n                자동로그인 <input name=\"remember-me\" type=\"checkbox\" />\n              </p>\n              <input type=\"hidden\" name=\"_csrf\" value={csrf} />\n              <p\n                style={{\n                  paddingTop: \"60px\",\n                  paddingLeft: \"15px\",\n                  paddingBottom: \"30px\",\n                  display: \"flex\",\n                  width: \"450px\",\n                  justifyContent: \"space-evenly\",\n                }}\n              >\n                <Button\n                  onClick={() => {\n                    resetShow();\n\n                    if (!checkValue(idInput)) {\n                      SetidCheck(true);\n                      return;\n                    }\n                    if (!checkValue(pwInput)) {\n                      SetpwCheck(true);\n                      return;\n                    }\n\n                    form.submit();\n\n                    // dispatch({\n                    //   type: \"login\",\n                    //   payload: {\n                    //     username: idInput.value,\n                    //     password: pwInput.value,\n                    //   },\n                    // });\n                  }}\n                  style={{\n                    backgroundColor: \"#2d4059\",\n                    border: \"none\",\n                    fontSize: \"24px\",\n                  }}\n                >\n                  로그인\n                </Button>\n                <Button\n                  onClick={() => {\n                    navigate(\"/account\");\n                  }}\n                  style={{\n                    backgroundColor: \"#2d4059\",\n                    border: \"none\",\n                    fontSize: \"24px\",\n                  }}\n                >\n                  회원가입\n                </Button>\n                <Button\n                  onClick={() => {\n                    navigate(\"/\");\n                  }}\n                  style={{\n                    backgroundColor: \"#2d4059\",\n                    border: \"none\",\n                    fontSize: \"24px\",\n                  }}\n                >\n                  취소\n                </Button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect, useState } from \"react\";\nimport { RiAccountPinBoxFill } from \"react-icons/ri\";\nimport { SiCashapp } from \"react-icons/si\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst Account = () => {\n  let dispatch = useDispatch();\n\n  let navigate = useNavigate();\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n\n  // end cookie\n\n  const signup = async (email, pw, nick) => {\n    await axios({\n      url: \"/signUp\",\n      method: \"post\",\n      data: {\n        email: email,\n        pw: pw,\n        nick: nick,\n      },\n      headers: {\n        \"XSRF-TOKEN\": csrf,\n      },\n    })\n      .then((result) => {\n        console.log(\"success signup\");\n        handleShow();\n      })\n      .catch((err) => {\n        console.log(\"signup error\");\n        SetcheckSame(true);\n      });\n  };\n\n  let [position, setPosition] = useState(\"\");\n\n  let currentWidth = document.documentElement.clientWidth;\n\n  useEffect(() => {\n    if (currentWidth > 770) {\n      setPosition(\"absolute\");\n    }\n\n    if (currentWidth <= 770) {\n      setPosition(\"absolute\");\n    }\n  }, [currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 770) {\n      setPosition(\"\");\n    }\n\n    if (screenWidth > 770) {\n      setPosition(\"absolute\");\n    }\n  });\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [idCheck, SetidCheck] = useState(false);\n  const [idWarn, SetidWarn] = useState(false);\n  const [idSame, SetidSame] = useState(\"\");\n\n  const [pwCheck, SetpwCheck] = useState(false);\n  const [pwWarn, SetpwWarn] = useState(false);\n\n  const [pw2Check, Setpw2Check] = useState(false);\n  const [pw2Warn, Setpw2Warn] = useState(false);\n\n  const [nickCheck, SetnickCheck] = useState(false);\n  const [nickWarn, SetnickWarn] = useState(false);\n  const [nickSame, SetnickSame] = useState(\"\");\n\n  const [checkSame, SetcheckSame] = useState(false);\n\n  const idInput = document.getElementById(\"ID\");\n  const pwInput = document.getElementById(\"PW\");\n  const pw2Input = document.getElementById(\"PW2\");\n  const nickInput = document.getElementById(\"NICK\");\n\n  const checkValue = (input) => {\n    console.log(input.value);\n\n    return input.value;\n  };\n\n  useEffect(() => {\n    resetShow();\n  }, []);\n\n  const resetShow = () => {\n    SetidCheck(false);\n    SetidWarn(false);\n    SetidSame(false);\n    SetpwCheck(false);\n    SetpwWarn(false);\n    Setpw2Check(false);\n    Setpw2Warn(false);\n    SetnickCheck(false);\n    SetnickWarn(false);\n    SetnickSame(\"\");\n    SetidSame(\"\");\n    SetcheckSame(false);\n  };\n\n  // resize screen\n\n  let [flexdir, Setflexdir] = useState(\"row nowrap\");\n\n  let [margindir1, Setmargindir1] = useState(\"-70px\");\n  let [margindir2, Setmargindir2] = useState(\"-165px\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (currentWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n      Setmargindir1(\"-70px\");\n      Setmargindir2(\"-165px\");\n    }\n    if (currentWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n      Setmargindir1(\"0px\");\n      Setmargindir2(\"0px\");\n    }\n  }, [flexdir, currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n      Setmargindir1(\"0px\");\n      Setmargindir2(\"0px\");\n    }\n\n    if (screenWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n      Setmargindir1(\"-70px\");\n      Setmargindir2(\"-165px\");\n    }\n  });\n\n  ///end resize screen\n\n  // axios\n  const idSameCheck = async (id) => {\n    await axios\n      .get(\"/findEmail?email=\" + id)\n      .then((result) => {\n        // console.log(result.data.nick);\n        if (result.data.nick) {\n          resetShow();\n          SetidSame(\"yes\");\n          return true;\n        } else {\n          resetShow();\n          SetidSame(\"no\");\n          return false;\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\");\n      });\n  };\n  const nickSameCheck = async (nick) => {\n    await axios\n      .get(\"/findNick?nick=\" + nick)\n      .then((result) => {\n        console.log(result.data.nick);\n        if (result.data.email) {\n          SetnickSame(\"yes\");\n          return true;\n        } else {\n          SetnickSame(\"no\");\n          return false;\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\");\n      });\n  };\n  // end exios\n\n  function enterkey() {\n    if (window.event.keyCode === 13) {\n      // 엔터키가 눌렸을 때\n\n      console.log(\"enter!!\");\n\n      resetShow();\n\n      const korean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; //한글\n      const specialText = /[~!@#$%<>^&*]/; //특수문자\n\n      const idInputArray = idInput.value.split(\"\");\n      const nickInputArray = nickInput.value.split(\"\");\n\n      if (!checkValue(idInput)) {\n        SetidCheck(true);\n        return;\n      }\n\n      if (!checkValue(pwInput)) {\n        SetpwCheck(true);\n        return;\n      }\n      if (!checkValue(pw2Input)) {\n        Setpw2Check(true);\n        return;\n      }\n      if (!checkValue(nickInput)) {\n        SetnickCheck(true);\n        return;\n      }\n      if (\n        !idInputArray.find((item) => item === \"@\") ||\n        !idInputArray.find((item) => item === \".\")\n      ) {\n        SetidWarn(true);\n        idInput.value = \"\";\n        return;\n      }\n\n      if (!specialText.test(pwInput.value)) {\n        SetpwWarn(true);\n        pwInput.value = \"\";\n        return;\n      }\n\n      if (!(pwInput.value === pw2Input.value)) {\n        Setpw2Warn(true);\n        pw2Input.value = \"\";\n        return;\n      }\n      if (korean.test(nickInput.value)) {\n        if (nickInputArray.length > 15) {\n          SetnickWarn(true);\n          nickInput.value = \"\";\n          return;\n        }\n      } else {\n        if (nickInputArray.length > 30) {\n          SetnickWarn(true);\n          nickInput.value = \"\";\n          return;\n        }\n      }\n\n      signup(idInput.value, pw2Input.value, nickInput.value);\n    }\n  }\n\n  // styled component\n  let TopTitle = styled(\"p\")`\n    font-size: 48px;\n    padding-bottom: 50px;\n  `;\n\n  let Head = styled(\"p\")`\n    font-size: 32px;\n    width: 300px;\n    border-bottom: 2px solid #2d4059;\n  `;\n\n  let Label = styled(\"span\")`\n    font-size: 48px;\n    text-align: center;\n    display: inline-block;\n    width: 210px;\n  `;\n\n  let Warn = styled(\"p\")`\n    color: red;\n  `;\n\n  let Success = styled(\"p\")`\n    color: blue;\n  `;\n  // end styled component\n\n  return (\n    <div onKeyUp={enterkey}>\n      <div className=\"container\" style={{ position: \"relative\" }}>\n        {/* logo */}\n        <div\n          onClick={() => {\n            navigate(\"/\");\n          }}\n          style={{\n            position: position,\n            paddingTop: \"80px\",\n            left: \"80px\",\n            cursor: \"pointer\",\n          }}\n        >\n          <SiCashapp\n            style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n          />\n        </div>\n        {/* end logo */}\n\n        <div className=\"row\">\n          <div\n            className=\"col d-flex flex-column justify-content-center align-items-center\"\n            style={{ paddingTop: \"80px\" }}\n          >\n            <TopTitle>\n              Join us\n              <br />&<br />\n              Make your Value !!\n            </TopTitle>\n            <Head>Create Account</Head>\n            <p>\n              <RiAccountPinBoxFill style={{ fontSize: \"48px\" }} />\n            </p>\n            <p\n              style={{\n                display: \"flex\",\n                width: \"70%\",\n                alignItems: \"center\",\n                paddingTop: \"30px\",\n                flexFlow: flexdir,\n                justifyContent: \"center\",\n                marginLeft: margindir1,\n              }}\n            >\n              <Label>ID(Email)</Label>\n              <input\n                id=\"ID\"\n                type=\"text\"\n                placeholder=\"아이디를 입력하세요\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <Button\n                onClick={() => {\n                  if (!idInput.value) {\n                    resetShow();\n                    SetidCheck(true);\n                    return;\n                  }\n                  resetShow();\n\n                  const idInputArray = idInput.value.split(\"\");\n\n                  if (\n                    !idInputArray.find((item) => item === \"@\") ||\n                    !idInputArray.find((item) => item === \".\")\n                  ) {\n                    SetidWarn(true);\n                    idInput.value = \"\";\n                    return;\n                  }\n\n                  idSameCheck(idInput.value);\n                }}\n                style={{ margin: \"20px 10px\" }}\n              >\n                중복확인\n              </Button>\n            </p>\n            {idCheck ? <Warn>이메일을 입력해주세요.</Warn> : null}\n            {idWarn ? (\n              <Warn>올바른 형식의 이메일이 아닙니다. 다시 입력해주세요.</Warn>\n            ) : null}\n            {idSame === \"yes\" ? (\n              <Warn>\n                중복되는 아이디가 존재합니다. 다른 이메일을 입력해주세요.\n              </Warn>\n            ) : null}\n            {idSame === \"no\" ? (\n              <Success>사용가능한 아이디입니다.</Success>\n            ) : null}\n            <p\n              style={{\n                display: \"flex\",\n                width: \"70%\",\n                alignItems: \"center\",\n                paddingTop: \"30px\",\n                flexFlow: flexdir,\n                justifyContent: \"center\",\n                marginLeft: margindir2,\n              }}\n            >\n              <Label>PW</Label>\n              <input\n                id=\"PW\"\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </p>\n            {pwCheck ? <Warn>비밀번호를 입력해주세요.</Warn> : null}\n            {pwWarn ? (\n              <Warn>\n                올바른 형식의 비밀번호가 아닙니다. 특수문자를 넣어서 다시\n                입력해주세요.\n              </Warn>\n            ) : null}\n            <p\n              style={{\n                display: \"flex\",\n                width: \"70%\",\n                alignItems: \"center\",\n                paddingTop: \"30px\",\n                flexFlow: flexdir,\n                justifyContent: \"center\",\n                marginLeft: margindir2,\n              }}\n            >\n              <Label>PW(확인)</Label>\n              <input\n                id=\"PW2\"\n                type=\"password\"\n                placeholder=\"입력했던 비밀번호를 똑같이 입력하세요\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </p>\n            {pw2Check ? <Warn>비밀번호를 입력해주세요.</Warn> : null}\n            {pw2Warn ? (\n              <Warn>\n                입력했던 비밀번호와 일치하지 않습니다. 다시 입력해주세요.\n              </Warn>\n            ) : null}\n            <p\n              style={{\n                display: \"flex\",\n                width: \"70%\",\n                alignItems: \"center\",\n                paddingTop: \"30px\",\n                flexFlow: flexdir,\n                justifyContent: \"center\",\n                marginLeft: margindir1,\n              }}\n            >\n              <Label>닉네임</Label>\n              <input\n                id=\"NICK\"\n                type=\"text\"\n                placeholder=\"닉네임을 입력하세요\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <Button\n                onClick={() => {\n                  if (!nickInput.value) {\n                    resetShow();\n                    SetnickCheck(true);\n                    return;\n                  }\n                  resetShow();\n\n                  const korean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; //한글\n\n                  const nickInputArray = nickInput.value.split(\"\");\n\n                  if (korean.test(nickInput.value)) {\n                    if (nickInputArray.length > 15) {\n                      SetnickWarn(true);\n                      nickInput.value = \"\";\n                      return;\n                    }\n                  } else {\n                    if (nickInputArray.length > 30) {\n                      SetnickWarn(true);\n                      nickInput.value = \"\";\n                      return;\n                    }\n                  }\n\n                  nickSameCheck(nickInput.value);\n                }}\n                style={{ margin: \"20px 10px\" }}\n              >\n                중복확인\n              </Button>\n            </p>\n            {nickCheck ? <Warn>닉네임을 입력해주세요.</Warn> : null}\n            {nickWarn ? (\n              <Warn>닉네임 제한길이를 초과하였습니다. 다시 입력해주세요.</Warn>\n            ) : null}\n            {nickSame === \"yes\" ? (\n              <Warn>\n                중복되는 닉네임이 존재합니다. 다른 닉네임을 입력해주세요.\n              </Warn>\n            ) : null}\n            {nickSame === \"no\" ? (\n              <Success>사용가능한 닉네임입니다.</Success>\n            ) : null}\n            {checkSame ? (\n              <Warn>\n                중복확인 버튼을 눌러 아이디 및 닉네임의 중복 여부를\n                확인해주세요!!!\n              </Warn>\n            ) : null}\n            <p\n              style={{\n                paddingTop: \"60px\",\n                paddingRight: \"20px\",\n                display: \"flex\",\n                width: \"300px\",\n                justifyContent: \"space-evenly\",\n                paddingBottom: \"50px\",\n              }}\n            >\n              <Button\n                onClick={() => {\n                  resetShow();\n\n                  const korean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; //한글\n                  const specialText = /[~!@#$%<>^&*]/; //특수문자\n\n                  // console.log(korean.test(\"닉네임\"));\n                  // console.log(specialText.test(\"asser@@\"));\n\n                  const idInputArray = idInput.value.split(\"\");\n                  const nickInputArray = nickInput.value.split(\"\");\n\n                  // console.log(nickInputArray.length);\n\n                  // console.log(idInputArray);\n                  // console.log(!idInputArray.find((item) => item == \"@\"));\n                  // console.log(!idInputArray.find((item) => item == \".\"));\n\n                  if (!checkValue(idInput)) {\n                    SetidCheck(true);\n                    return;\n                  }\n\n                  if (!checkValue(pwInput)) {\n                    SetpwCheck(true);\n                    return;\n                  }\n                  if (!checkValue(pw2Input)) {\n                    Setpw2Check(true);\n                    return;\n                  }\n                  if (!checkValue(nickInput)) {\n                    SetnickCheck(true);\n                    return;\n                  }\n                  if (\n                    !idInputArray.find((item) => item === \"@\") ||\n                    !idInputArray.find((item) => item === \".\")\n                  ) {\n                    SetidWarn(true);\n                    idInput.value = \"\";\n                    return;\n                  }\n\n                  if (!specialText.test(pwInput.value)) {\n                    SetpwWarn(true);\n                    pwInput.value = \"\";\n                    return;\n                  }\n\n                  if (!(pwInput.value === pw2Input.value)) {\n                    Setpw2Warn(true);\n                    pw2Input.value = \"\";\n                    return;\n                  }\n                  if (korean.test(nickInput.value)) {\n                    if (nickInputArray.length > 15) {\n                      SetnickWarn(true);\n                      nickInput.value = \"\";\n                      return;\n                    }\n                  } else {\n                    if (nickInputArray.length > 30) {\n                      SetnickWarn(true);\n                      nickInput.value = \"\";\n                      return;\n                    }\n                  }\n\n                  signup(idInput.value, pw2Input.value, nickInput.value);\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                가입하기\n              </Button>\n              <Button\n                onClick={() => {\n                  navigate(\"/\");\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                취소\n              </Button>\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* modal */}\n      <Modal\n        show={show}\n        onHide={handleClose}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>환영합니다!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>가입이 정상적으로 완료되었습니다.</p>\n          <p>로그인페이지에서 가입한 아이디로 로그인 하세요.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              navigate(\"/login\");\n            }}\n          >\n            로그인 페이지로 이동\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              navigate(\"/welcome\");\n            }}\n          >\n            닫기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Account;\n","export default __webpack_public_path__ + \"static/media/welcome.7fd3130e.svg\";","import React, { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport WelcomeImg from \"../img/welcome.svg\";\n\nconst Welcome = () => {\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container\" style={{ position: \"relative\" }}>\n        <div className=\"row\">\n          <div\n            className=\"col d-flex flex-column justify-content-center align-items-center\"\n            style={{ paddingTop: \"50px\" }}\n          >\n            <div>\n              <img\n                src={WelcomeImg}\n                alt=\"welcome\"\n                style={{ width: \"100%\" }}\n              ></img>\n            </div>\n            <p style={{ padding: \"50px 0\", fontSize: \"32px\" }}>\n              이제 당신의 가치를 알아보세요!\n            </p>\n            <Button\n              onClick={() => {\n                navigate(\"/\");\n              }}\n              style={{\n                backgroundColor: \"#2d4059\",\n                border: \"none\",\n                fontSize: \"24px\",\n              }}\n            >\n              메인페이지로 가기\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ItemCard from \"./ItemCard\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nlet TopTitle = styled(\"p\")`\n  font-size: 48px;\n`;\n\nlet Line = styled(\"div\")`\n  width: 80%;\n  height: 5px;\n  background-color: #2d4059;\n  margin: 0 auto;\n`;\n\nconst BoardMain = () => {\n  let dispatch = useDispatch();\n\n  const checkLogin = async () => {\n    await axios\n      .get(\"/checklogin\")\n      .then((result) => {\n        SetCheckUser(result.data);\n        console.log(result.data);\n      })\n      .catch((err) => {\n        console.log(\"please login\");\n      });\n  };\n\n  let [checkUser, SetCheckUser] = useState(\"\");\n\n  const readList = async () => {\n    await axios.get(\"/readList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n      dispatch({\n        type: \"readList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  // const readHotList = async () =>{\n  //   await axios.get(\"http://localhost:8181/readList\")\n  // }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    checkLogin();\n    readList();\n  }, []);\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let boardState = state.boardReducer;\n\n  // pagination data\n  const items = boardState;\n\n  let [select, SetSelect] = useState(\"\");\n  let [search, SetSearch] = useState(\"\");\n\n  const typeChanger = (select) => {\n    if (select === \"제목\") {\n      return \"title\";\n    } else if (select === \"내용\") {\n      return \"content\";\n    } else if (select === \"작성자\") {\n      return \"writer\";\n    } else if (select === \"태그\") {\n      return \"tag\";\n    }\n  };\n\n  let navigate = useNavigate();\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg\" style={{ margin: \"50px auto\" }}>\n          <div className=\"row\">\n            {currentItems === \"\" ? (\n              <p style={{ fontSize: \"32px\" }}>관련 게시물이 없습니다.</p>\n            ) : (\n              currentItems &&\n              currentItems.map((item, index) => (\n                <div\n                  className=\"col-lg-4 d-flex justify-content-center\"\n                  key={index}\n                >\n                  <div\n                    onClick={() => {\n                      navigate(\"/detail/\" + item.bno);\n                      console.log(item);\n                    }}\n                  >\n                    <ItemCard item={item} />\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check items & Feed back</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n      <div\n        className=\"container-lg\"\n        style={{\n          padding: \"30px 30px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ marginRight: \"20px\" }}>\n            <select\n              id=\"tagSelect\"\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              onChange={(e) => {\n                SetSelect(\n                  typeChanger(e.target.options[e.target.selectedIndex].text)\n                );\n              }}\n            >\n              <option defaultValue>검색항목</option>\n              <option value=\"1\">제목</option>\n              <option value=\"2\">내용</option>\n              <option value=\"3\">작성자</option>\n              <option value=\"4\">태그</option>\n            </select>\n          </div>\n          <input id=\"search\" type=\"text\" placeholder=\"검색어를 입력해주세요\" />\n          <FaSearch\n            onClick={async () => {\n              let search = document.getElementById(\"search\").value;\n              SetSearch(search);\n\n              console.log(search, select);\n\n              if (search === \"\" && select === \"\") {\n                console.log(\"검색항목을 선택하고 검색어를 입력해주세요\");\n                return;\n              }\n\n              await axios({\n                url: \"/getSearchList\",\n                method: \"get\",\n                params: {\n                  type: select,\n                  keyword: search,\n                },\n              }).then((res) => {\n                console.log(res.data);\n                dispatch({\n                  type: \"searchList\",\n                  payload: res.data,\n                });\n              });\n            }}\n            style={{ fontSize: \"24px\", marginLeft: \"10px\", cursor: \"pointer\" }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              if (checkUser) {\n                navigate(\"/register\");\n              } else {\n                navigate(\"/login\");\n              }\n            }}\n          >\n            글등록\n          </Button>\n        </div>\n      </div>\n      <PaginatedItems itemsPerPage={6} />\n    </div>\n  );\n};\n\nexport default BoardMain;\n","import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { RiFileUploadFill } from \"react-icons/ri\";\n\nconst Register = () => {\n  let navigate = useNavigate();\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n\n  // end cookie\n\n  let dispatch = useDispatch();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [titleCheck, SettitleCheck] = useState(false);\n\n  const [contentCheck, SetcontentCheck] = useState(false);\n\n  const [suggestCheck, SetsuggestCheck] = useState(false);\n\n  const [imageCheck, SetimageCheck] = useState(false);\n\n  const checkValue = (input) => {\n    console.log(input.value);\n\n    return input.value;\n  };\n\n  const resetShow = () => {\n    SettitleCheck(false);\n    SetcontentCheck(false);\n    SetsuggestCheck(false);\n    SetimageCheck(false);\n  };\n\n  let currentWidth = document.documentElement.clientWidth;\n\n  // resize screen\n\n  let [flexdir, Setflexdir] = useState(\"row nowrap\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (currentWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n    }\n    if (currentWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n    }\n  }, [flexdir, currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n    }\n\n    if (screenWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n    }\n  });\n\n  ///end resize screen\n\n  // styled component\n  let TopTitle = styled(\"p\")`\n    font-size: 48px;\n  `;\n\n  let Label = styled(\"div\")`\n    font-size: 48px;\n    text-align: center;\n    display: inline-block;\n    width: 300px;\n  `;\n\n  let Warn = styled(\"p\")`\n    color: red;\n  `;\n\n  let Line = styled(\"div\")`\n    width: 80%;\n    height: 5px;\n    background-color: #2d4059;\n    margin: 0 auto;\n  `;\n  // end styled component\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check items & Feed back</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col d-flex flex-column justify-content-center align-items-center\"\n            style={{ paddingTop: \"80px\" }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>제목</Label>\n              <input\n                id=\"TITLE\"\n                type=\"text\"\n                placeholder=\"제목을 입력하세요\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            {titleCheck ? <Warn>제목을 입력해주세요.</Warn> : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                사진 첨부\n                <br />\n                (선택사항)\n              </Label>\n              <div\n                style={{\n                  width: \"450px\",\n                  height: \"400px\",\n                  fontSize: \"20px\",\n                  border: \"1px solid #666\",\n                  borderRadius: \"3px\",\n                  overflow: \"auto\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    padding: \"20px 0\",\n                    marginBottom: \"30px\",\n                    borderBottom: \"3px solid #EA5455\",\n                  }}\n                >\n                  <label for=\"ATTACH\">\n                    <RiFileUploadFill\n                      color=\"#EA5455\"\n                      size=\"35px\"\n                      cursor=\"pointer\"\n                    />\n                  </label>\n                  <span> 👈 원하는 이미지 또는 짤을 4개까지만 선택하세요!</span>\n                </div>\n                {imageCheck ? (\n                  <Warn>이미지 및 짤은 최대 4개까지만 선택이 가능합니다!!</Warn>\n                ) : null}\n                <input\n                  id=\"ATTACH\"\n                  hidden=\"true\"\n                  type=\"file\"\n                  multiple=\"multiple\"\n                  accept=\".jpg, .jpeg, .png, .svg+xml, .gif\"\n                  onChange={(e) => {\n                    console.log(\"change!\");\n\n                    let imgBoxDiv = document.querySelectorAll(\"#imgBox div\");\n\n                    for (let i = 0; i < imgBoxDiv.length; i++) {\n                      imgBoxDiv[i].parentNode.removeChild(imgBoxDiv[i]);\n                    }\n\n                    let fileArr = [...e.target.files];\n\n                    // fileArr = [file(),file(),file()]\n\n                    console.log(fileArr.length);\n\n                    if (fileArr.length >= 5) {\n                      SetimageCheck(true);\n                      return;\n                    } else {\n                      SetimageCheck(false);\n                    }\n\n                    let base64Arr = [];\n\n                    let base64Obj = {};\n\n                    fileArr.forEach((item, index) => {\n                      let reader = new FileReader();\n\n                      let imgBox = document.getElementById(\"imgBox\");\n                      let div = document.createElement(\"div\");\n                      let image = document.createElement(\"img\");\n                      let del = document.createElement(\"span\");\n\n                      div.style = \"display:flex;\";\n\n                      del.textContent = \"✘\";\n                      del.style =\n                        \"font-size: 30px; color: #EA5455; margin-left:10px; margin-top:-10px; cursor: pointer\";\n                      del.addEventListener(\"click\", (e) => {\n                        console.log(e.target.parentNode.parentNode);\n                        e.target.parentNode.parentNode.removeChild(div);\n                      });\n\n                      reader.onload = (e) => {\n                        let dataURL = reader.result;\n                        // console.log(typeof reader.result);\n                        base64Arr.push(dataURL);\n                        image.src = dataURL;\n                        image.style =\n                          \"width: 350px; display: block; margin-bottom: 20px\";\n\n                        imgBox.appendChild(div);\n                        div.appendChild(image);\n                        div.append(del);\n                      };\n\n                      reader.readAsDataURL(item);\n\n                      // console.log(base64Arr);\n                      // console.log(typeof base64Arr);\n                      // console.log(base64Arr[0]);\n                    });\n                  }}\n                  style={{ width: \"400px\", margin: \"20px 0\" }}\n                />\n                <div\n                  id=\"imgBox\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    flexFlow: \"column wrap\",\n                  }}\n                ></div>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                alignItems: \"center\",\n                paddingTop: \"30px\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>내용</Label>\n              <textarea\n                id=\"CONTENT\"\n                placeholder=\"본문 내용을 입력하세요\"\n                style={{\n                  width: \"450px\",\n                  height: \"400px\",\n                  fontSize: \"20px\",\n                  marginBottom: \"10px\",\n                  resize: \"none\",\n                }}\n              />\n            </div>\n            {contentCheck ? <Warn>내용을 입력해주세요.</Warn> : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                제시가\n                <br />\n                (선택사항)\n              </Label>\n              <input\n                id=\"SUGGESTION\"\n                type=\"text\"\n                placeholder=\"제시할 가격을 입력하세요 (생략가능)\"\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            {suggestCheck ? (\n              <Warn style={{ marginLeft: \"-80px\" }}>\n                숫자만 입력이 가능합니다.\n              </Warn>\n            ) : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                태그 (최대3개)\n                <br />\n                (선택사항)\n              </Label>\n              <input\n                id=\"TAG1\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <input\n                id=\"TAG2\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  margin: \"20px 20px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <input\n                id=\"TAG3\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            <div\n              style={{\n                paddingTop: \"60px\",\n                paddingRight: \"20px\",\n                display: \"flex\",\n                width: \"300px\",\n                justifyContent: \"space-evenly\",\n                paddingBottom: \"50px\",\n              }}\n            >\n              <Button\n                onClick={async () => {\n                  let thumbnailURL = \"\";\n                  let postImgURL = [];\n\n                  let attachImgBox = document.querySelectorAll(\"#imgBox img\");\n\n                  if (attachImgBox.length > 0) {\n                    let arrAttachImgBox = [...attachImgBox];\n\n                    let thumbnailImgTag = attachImgBox[0];\n\n                    console.log(attachImgBox);\n\n                    thumbnailURL = thumbnailImgTag.src;\n\n                    console.log(thumbnailURL);\n\n                    postImgURL = arrAttachImgBox.map((item, index) => {\n                      return item.src;\n                    });\n\n                    console.log(postImgURL);\n                  }\n\n                  resetShow();\n\n                  let titleInput = document.getElementById(\"TITLE\");\n                  let contentInput = document.getElementById(\"CONTENT\");\n                  let suggestInput = document.getElementById(\"SUGGESTION\");\n                  let tag1Input = document.getElementById(\"TAG1\");\n                  let tag2Input = document.getElementById(\"TAG2\");\n                  let tag3Input = document.getElementById(\"TAG3\");\n\n                  let tagArr = [];\n\n                  if (tag1Input.value) {\n                    tagArr.push(tag1Input.value);\n                  }\n                  if (tag2Input.value) {\n                    tagArr.push(tag2Input.value);\n                  }\n                  if (tag3Input.value) {\n                    tagArr.push(tag3Input.value);\n                  }\n\n                  console.log(tagArr);\n\n                  // console.log(titleInput);\n\n                  let number = /[0-9]/; // 숫자 체크\n\n                  if (!checkValue(titleInput)) {\n                    SettitleCheck(true);\n                    return;\n                  }\n                  if (!checkValue(contentInput)) {\n                    SetcontentCheck(true);\n                    return;\n                  }\n\n                  if (checkValue(suggestInput)) {\n                    if (!number.test(suggestInput.value)) {\n                      SetsuggestCheck(true);\n                      suggestInput.value = \"\";\n                      return;\n                    }\n                  }\n\n                  await axios({\n                    url: \"/register\",\n                    method: \"post\",\n                    data: {\n                      title: titleInput.value,\n                      content: contentInput.value,\n                      imageList: postImgURL.length > 0 ? postImgURL : null,\n                      tagList: tagArr.length > 0 ? tagArr : [\"not\"],\n                      suggestion: suggestInput.value\n                        ? suggestInput.value\n                        : null,\n                    },\n                    headers: {\n                      \"XSRF-TOKEN\": csrf,\n                    },\n                  }).then((res) => {\n                    console.log(res.data);\n                  });\n\n                  handleShow();\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                등록하기\n              </Button>\n              <Button\n                onClick={() => {\n                  navigate(\"/boardmain\");\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                취소\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* modal */}\n      <Modal\n        show={show}\n        onHide={handleClose}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>글이 정상 등록되었습니다.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>게시판페이지에서 등록한 게시물을 확인해보세요.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              navigate(\"/boardmain\");\n            }}\n          >\n            게시판으로 이동\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { RiFileUploadFill } from \"react-icons/ri\";\n\nconst Modify = () => {\n  let navigate = useNavigate();\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n\n  // end cookie\n\n  let dispatch = useDispatch();\n\n  const readList = async () => {\n    await axios.get(\"/readList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n\n      dispatch({\n        type: \"readList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    readList();\n  }, []);\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [titleCheck, SettitleCheck] = useState(false);\n\n  const [contentCheck, SetcontentCheck] = useState(false);\n\n  const [suggestCheck, SetsuggestCheck] = useState(false);\n\n  const [imageCheck, SetimageCheck] = useState(false);\n\n  const checkValue = (input) => {\n    console.log(input.value);\n\n    return input.value;\n  };\n\n  const resetShow = () => {\n    SettitleCheck(false);\n    SetcontentCheck(false);\n    SetsuggestCheck(false);\n    SetimageCheck(false);\n  };\n\n  let { bno } = useParams();\n  console.log(bno);\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let boardState = state.boardReducer;\n\n  let findItemBoard =\n    boardState === \"\"\n      ? null\n      : boardState.find((item) => {\n          return item.bno === parseInt(bno);\n        });\n\n  console.log(findItemBoard);\n\n  let item = findItemBoard;\n\n  let currentWidth = document.documentElement.clientWidth;\n\n  // resize screen\n\n  let [flexdir, Setflexdir] = useState(\"row nowrap\");\n\n  useEffect(() => {\n    if (currentWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n    }\n    if (currentWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n    }\n  }, [flexdir, currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 1200) {\n      Setflexdir(\"column nowrap\");\n    }\n\n    if (screenWidth > 1200) {\n      Setflexdir(\"row nowrap\");\n    }\n  });\n\n  ///end resize screen\n\n  // styled component\n  let TopTitle = styled(\"p\")`\n    font-size: 48px;\n  `;\n\n  let Label = styled(\"div\")`\n    font-size: 48px;\n    text-align: center;\n    display: inline-block;\n    width: 300px;\n  `;\n\n  let Warn = styled(\"p\")`\n    color: red;\n  `;\n\n  let Line = styled(\"div\")`\n    width: 80%;\n    height: 5px;\n    background-color: #2d4059;\n    margin: 0 auto;\n  `;\n  // end styled component\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check items & Feed back</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col d-flex flex-column justify-content-center align-items-center\"\n            style={{ paddingTop: \"80px\" }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>제목</Label>\n              <input\n                id=\"TITLE\"\n                type=\"text\"\n                placeholder=\"제목을 입력하세요\"\n                defaultValue={item == null ? null : item.title}\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            {titleCheck ? <Warn>제목을 입력해주세요.</Warn> : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                사진 첨부\n                <br />\n                (선택사항)\n              </Label>\n              <div\n                style={{\n                  width: \"450px\",\n                  height: \"400px\",\n                  fontSize: \"20px\",\n                  border: \"1px solid #666\",\n                  borderRadius: \"3px\",\n                  overflow: \"auto\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    padding: \"20px 0\",\n                    marginBottom: \"30px\",\n                    borderBottom: \"3px solid #EA5455\",\n                  }}\n                >\n                  <label for=\"ATTACH\">\n                    <RiFileUploadFill\n                      color=\"#EA5455\"\n                      size=\"35px\"\n                      cursor=\"pointer\"\n                    />\n                  </label>\n                  <span> 👈 원하는 이미지 또는 짤을 4개까지만 선택하세요!</span>\n                </div>\n                {imageCheck ? (\n                  <Warn>이미지 및 짤은 최대 4개까지만 선택이 가능합니다!!</Warn>\n                ) : null}\n                <input\n                  id=\"ATTACH\"\n                  type=\"file\"\n                  hidden=\"true\"\n                  multiple=\"multiple\"\n                  accept=\".jpg, .jpeg, .png, .svg+xml\"\n                  onChange={(e) => {\n                    console.log(\"change!\");\n\n                    let imgBoxDiv = document.querySelectorAll(\"#imgBox div\");\n\n                    for (let i = 0; i < imgBoxDiv.length; i++) {\n                      imgBoxDiv[i].parentNode.removeChild(imgBoxDiv[i]);\n                    }\n\n                    let fileArr = [...e.target.files];\n\n                    // fileArr = [file(),file(),file()]\n\n                    console.log(fileArr.length);\n\n                    if (fileArr.length >= 5) {\n                      SetimageCheck(true);\n                      return;\n                    } else {\n                      SetimageCheck(false);\n                    }\n\n                    let base64Arr = [];\n\n                    let base64Obj = {};\n\n                    fileArr.forEach((item, index) => {\n                      let reader = new FileReader();\n\n                      let imgBox = document.getElementById(\"imgBox\");\n                      let div = document.createElement(\"div\");\n                      let image = document.createElement(\"img\");\n                      let del = document.createElement(\"span\");\n\n                      div.style = \"display:flex;\";\n\n                      del.textContent = \"✘\";\n                      del.style =\n                        \"font-size: 30px; color: #EA5455; margin-left:10px; margin-top:-10px; cursor: pointer\";\n                      del.addEventListener(\"click\", (e) => {\n                        console.log(e.target.parentNode.parentNode);\n                        e.target.parentNode.parentNode.removeChild(div);\n                      });\n\n                      reader.onload = (e) => {\n                        let dataURL = reader.result;\n                        // console.log(typeof reader.result);\n                        base64Arr.push(dataURL);\n                        image.src = dataURL;\n                        image.style =\n                          \"width: 350px; display: block; margin-bottom: 20px\";\n\n                        imgBox.appendChild(div);\n                        div.appendChild(image);\n                        div.append(del);\n                      };\n\n                      reader.readAsDataURL(item);\n\n                      // console.log(base64Arr);\n                      // console.log(typeof base64Arr);\n                      // console.log(base64Arr[0]);\n                    });\n                  }}\n                  style={{ width: \"400px\", margin: \"20px 0\" }}\n                />\n                <div\n                  id=\"imgBox\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    flexFlow: \"column wrap\",\n                  }}\n                >\n                  {item === null\n                    ? null\n                    : item.imageList === null\n                    ? null\n                    : item.imageList.map((item, index) => {\n                        return (\n                          <div id={\"div\" + index} style={{ display: \"flex\" }}>\n                            <img\n                              src={item}\n                              alt=\"img\"\n                              style={{\n                                width: \"350px\",\n                                display: \"block\",\n                                marginBottom: \"20px\",\n                              }}\n                            />\n                            <span\n                              onClick={(e) => {\n                                let div = document.getElementById(\n                                  \"div\" + index\n                                );\n                                console.log(\n                                  e.currentTarget.parentNode.parentNode\n                                );\n                                e.currentTarget.parentNode.parentNode.removeChild(\n                                  div\n                                );\n                              }}\n                              style={{\n                                fontSize: \"30px\",\n                                color: \"#EA5455\",\n                                marginLeft: \"10px\",\n                                marginTop: \"-10px\",\n                                cursor: \"pointer\",\n                              }}\n                            >\n                              ✘\n                            </span>\n                          </div>\n                        );\n                      })}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>내용</Label>\n              <textarea\n                id=\"CONTENT\"\n                placeholder=\"본문 내용을 입력하세요\"\n                defaultValue={item == null ? null : item.content}\n                style={{\n                  width: \"450px\",\n                  height: \"400px\",\n                  fontSize: \"20px\",\n                  marginBottom: \"10px\",\n                }}\n              />\n            </div>\n            {contentCheck ? <Warn>내용을 입력해주세요.</Warn> : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                제시가\n                <br />\n                (선택사항)\n              </Label>\n              <input\n                id=\"SUGGESTION\"\n                type=\"text\"\n                placeholder=\"제시할 가격을 입력하세요 (생략가능)\"\n                defaultValue={\n                  item == null ? null : item.suggestion ? item.suggestion : null\n                }\n                style={{\n                  width: \"400px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            {suggestCheck ? (\n              <Warn style={{ marginLeft: \"-80px\" }}>\n                숫자만 입력이 가능합니다.\n              </Warn>\n            ) : null}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"80%\",\n                paddingTop: \"30px\",\n                alignItems: \"center\",\n                flexFlow: flexdir,\n              }}\n            >\n              <Label>\n                태그 (최대3개)\n                <br />\n                (선택사항)\n              </Label>\n              <input\n                id=\"TAG1\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                defaultValue={\n                  item == null\n                    ? null\n                    : item.tagList[0] === \"not\" || !item.tagList[0]\n                    ? null\n                    : item.tagList[0]\n                }\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <input\n                id=\"TAG2\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                defaultValue={\n                  item == null ? null : item.tagList[1] ? item.tagList[1] : null\n                }\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  margin: \"20px\",\n                  fontSize: \"20px\",\n                }}\n              />\n              <input\n                id=\"TAG3\"\n                type=\"text\"\n                placeholder=\"태그 입력란\"\n                defaultValue={\n                  item == null ? null : item.tagList[2] ? item.tagList[2] : null\n                }\n                style={{\n                  width: \"150px\",\n                  height: \"50px\",\n                  fontSize: \"20px\",\n                }}\n              />\n            </div>\n            <div\n              style={{\n                paddingTop: \"60px\",\n                paddingRight: \"20px\",\n                display: \"flex\",\n                width: \"300px\",\n                justifyContent: \"space-evenly\",\n                paddingBottom: \"50px\",\n              }}\n            >\n              <Button\n                onClick={async () => {\n                  let thumbnailURL = \"\";\n                  let postImgURL = [];\n\n                  let attachImgBox = document.querySelectorAll(\"#imgBox img\");\n\n                  if (attachImgBox.length > 0) {\n                    let arrAttachImgBox = [...attachImgBox];\n\n                    let thumbnailImgTag = attachImgBox[0];\n\n                    console.log(attachImgBox);\n\n                    thumbnailURL = thumbnailImgTag.src;\n\n                    console.log(thumbnailURL);\n\n                    postImgURL = arrAttachImgBox.map((item, index) => {\n                      return item.src;\n                    });\n\n                    console.log(postImgURL);\n                  }\n\n                  resetShow();\n\n                  let titleInput = document.getElementById(\"TITLE\");\n                  let contentInput = document.getElementById(\"CONTENT\");\n                  let suggestInput = document.getElementById(\"SUGGESTION\");\n                  let tag1Input = document.getElementById(\"TAG1\");\n                  let tag2Input = document.getElementById(\"TAG2\");\n                  let tag3Input = document.getElementById(\"TAG3\");\n\n                  let tagArr = [];\n\n                  if (tag1Input.value) {\n                    tagArr.push(tag1Input.value);\n                  }\n                  if (tag2Input.value) {\n                    tagArr.push(tag2Input.value);\n                  }\n                  if (tag3Input.value) {\n                    tagArr.push(tag3Input.value);\n                  }\n\n                  console.log(tagArr);\n\n                  // console.log(titleInput);\n\n                  let number = /[0-9]/; // 숫자 체크\n\n                  if (!checkValue(titleInput)) {\n                    SettitleCheck(true);\n                    return;\n                  }\n                  if (!checkValue(contentInput)) {\n                    SetcontentCheck(true);\n                    return;\n                  }\n\n                  if (checkValue(suggestInput)) {\n                    if (!number.test(suggestInput.value)) {\n                      SetsuggestCheck(true);\n                      suggestInput.value = \"\";\n                      return;\n                    }\n                  }\n\n                  console.log(\n                    typeof contentInput.value.replace(\n                      /(?:\\r\\n|\\r|\\n)/g,\n                      \"<br/>\"\n                    )\n                  );\n\n                  await axios({\n                    url: \"/update\",\n                    method: \"post\",\n                    data: {\n                      bno: bno,\n                      title: titleInput.value,\n                      content: contentInput.value,\n                      imageList: postImgURL.length > 0 ? postImgURL : null,\n                      tagList: tagArr.length > 0 ? tagArr : [\"not\"],\n                      suggestion: suggestInput.value\n                        ? suggestInput.value\n                        : null,\n                    },\n                    headers: {\n                      \"XSRF-TOKEN\": csrf,\n                    },\n                  }).then((res) => {\n                    console.log(res.data);\n                  });\n\n                  handleShow();\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                수정하기\n              </Button>\n              <Button\n                onClick={() => {\n                  navigate(-1);\n                }}\n                style={{\n                  backgroundColor: \"#2d4059\",\n                  border: \"none\",\n                  fontSize: \"24px\",\n                }}\n              >\n                취소\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* modal */}\n      <Modal\n        show={show}\n        onHide={handleClose}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>글이 정상 수정되었습니다.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>게시판페이지에서 수정된 게시물을 확인해보세요.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              navigate(\"/boardmain\");\n            }}\n          >\n            닫기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Modify;\n","import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst ReplyPagination = (props) => {\n  const checkLogin = async () => {\n    await axios\n      .get(\"/checklogin\")\n      .then((result) => {\n        SetCheckUser(result.data);\n        console.log(result.data);\n      })\n      .catch((err) => {\n        console.log(\"please login\");\n      });\n  };\n\n  const getMyInfo = async () => {\n    await axios\n      .get(\"/userinfo\")\n      .then((result) => {\n        console.log(result.data);\n        SetInfo(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  let [userInfo, SetInfo] = useState(\"\");\n\n  const readReplyList = async () => {\n    await axios({\n      url: \"/ReadReplyList\",\n      params: {\n        bno: props.bno,\n      },\n    }).then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: \"readReply\",\n        payload: res.data,\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMyInfo();\n    checkLogin();\n    readReplyList();\n  }, []);\n\n  let [checkUser, SetCheckUser] = useState(\"\");\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let navigate = useNavigate();\n\n  let dispatch = useDispatch();\n\n  let replyState = state.replyReducer;\n\n  // tier reader\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n    return findItem.color;\n  };\n\n  // findTier(tierSelect(포인트 데이터))\n  // tier reader end\n\n  const [loginLikeShow, setloginLikeShow] = useState(false);\n\n  const handleLoginLikeClose = () => setloginLikeShow(false);\n  const handleLoginLikeShow = () => setloginLikeShow(true);\n\n  // pagination data\n  const items = replyState;\n\n  // styled component\n  let Reply = styled(\"div\")`\n    border: 1px solid #ea5455;\n    color: black;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `;\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg d-flex justify-content-center\">\n          <div style={{ width: \"800px\", marginTop: \"100px\" }}>\n            <div\n              style={{\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                textAlign: \"left\",\n              }}\n            >\n              <span>댓글</span>\n            </div>\n            {currentItems &&\n              currentItems.map((item, index) => (\n                <Reply className=\"row\" key={index}>\n                  <div className=\"col-lg-7\" style={{ textAlign: \"left\" }}>\n                    {item == null ? null : item.rcontent}\n                  </div>\n                  <div\n                    className=\"col-lg-5\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"end\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        width: \"90px\",\n                        paddingRight: \"10px\",\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                      }}\n                    >\n                      {item == null ? null : item.replyer === \"anonymous\" ? (\n                        \"익명\"\n                      ) : (\n                        <span>\n                          <RiVipCrownFill\n                            color={findTier(tierSelect(item.point))}\n                          />{\" \"}\n                          {item.replyer}\n                        </span>\n                      )}\n                    </span>\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                        width: \"180px\",\n                      }}\n                    >\n                      {item == null\n                        ? null\n                        : item.rdate === \"2021/00/00\"\n                        ? null\n                        : String(\n                            new Date(+new Date(item.rdate) + 3240 * 10000)\n                              .toISOString()\n                              .replace(\"T\", \" \")\n                              .replace(/\\..*/, \"\")\n                          )}\n                    </span>\n                    <AiFillLike\n                      color=\"#EA5455\"\n                      onClick={async (e) => {\n                        if (!userInfo) {\n                          handleLoginLikeShow();\n                          return;\n                        }\n\n                        await axios({\n                          url: \"/Rlike\",\n                          method: \"get\",\n                          params: {\n                            mno: userInfo.mno,\n                            bno: props.bno,\n                            rno: item.rno,\n                          },\n                        }).then(async (res) => {\n                          await readReplyList();\n                        });\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.relike}\n                    </span>\n                    <AiFillDislike\n                      color=\"#F07B3F\"\n                      onClick={async (e) => {\n                        if (!userInfo) {\n                          handleLoginLikeShow();\n                          return;\n                        }\n\n                        await axios({\n                          url: \"/Rdislike\",\n                          method: \"get\",\n                          params: {\n                            rno: item.rno,\n                            bno: props.bno,\n                            mno: userInfo.mno,\n                          },\n                        }).then(async (res) => {\n                          await readReplyList();\n                        });\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.redislike}\n                    </span>\n                    {!checkUser ? null : (\n                      <span\n                        id={item == null ? \"\" : item.rno}\n                        onClick={async (e) => {\n                          let target = e.currentTarget;\n                          console.log(parseInt(target.id));\n                          console.log(item.bno);\n\n                          await axios({\n                            url: \"/DeleteReply\",\n                            method: \"delete\",\n                            params: {\n                              rno: parseInt(target.id),\n                              bno: item.bno,\n                              replyer: item.replyer,\n                            },\n                          })\n                            .then((res) => {\n                              console.log(res.data);\n                              dispatch({\n                                type: \"deleteReply\",\n                                payload: res.data,\n                              });\n                            })\n                            .catch((err) => {\n                              console.log(err);\n                              navigate(\"/login\");\n                            });\n                        }}\n                        style={{\n                          display: \"inline-block\",\n                          marginTop: \"-5px\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        <MdDeleteForever />\n                      </span>\n                    )}\n                  </div>\n                </Reply>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"30px\",\n          }}\n        >\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n  return (\n    <div>\n      <PaginatedItems itemsPerPage={6} />\n      {/* likelogin modal start */}\n      <Modal\n        show={loginLikeShow}\n        onHide={handleLoginLikeShow}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>⚠️ 로그인이 필요한 서비스입니다! ⚠️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          좋아요 및 싫어요를 하시려면 로그인이 필요합니다.\n          <br />\n          로그인을 하시거나 회원이 아니시라면 회원가입 후 이용 부탁드립니다.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleLoginLikeClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleLoginLikeClose();\n              navigate(\"/login\");\n            }}\n          >\n            로그인하러 가기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* likelogin modal end */}\n    </div>\n  );\n};\n\nexport default ReplyPagination;\n","import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst BoardListPagination = () => {\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let navigate = useNavigate();\n\n  let dispatch = useDispatch();\n\n  const read = async (bno) => {\n    await axios({\n      url: \"/read\",\n      method: \"get\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(res.data);\n\n      dispatch({\n        type: \"oneboard\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readReplyList = async (bno) => {\n    await axios({\n      url: \"/ReadReplyList\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: \"readReply\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readValueList = async (bno) => {\n    await axios({\n      url: \"/log\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(\"success valuelog\");\n      console.log(res.data);\n      dispatch({\n        type: \"valuelog\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readCalculateValue = async (bno) => {\n    await axios({\n      url: \"/cal\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(\"success cal\");\n      console.log(res.data);\n      dispatch({\n        type: \"calculate\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readedBoard = async (bno) => {\n    await axios({\n      url: \"/readed\",\n      method: \"get\",\n      params: {\n        bno: bno,\n      },\n    }).then(async (res) => {\n      console.log(\"좋아요 표시기\");\n      console.log(res.data);\n\n      console.log(res.data === \"\");\n\n      console.log(res.data.checklike);\n\n      if (!res.data.checklike) {\n        console.log(\"추천 이력 없음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      if (res.data.checklike === 0 && res.data.checkdislike === 0) {\n        console.log(\"추천 이력 있음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      if (res.data.checklike === 1 && res.data.checkdislike === 0) {\n        console.log(\"추천 이력 있음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"#EA5455\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      if (res.data.checklike === 0 && res.data.checkdislike === 1) {\n        console.log(\"비추천 이력 없음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"#F07B3F\",\n          },\n        });\n      }\n    });\n  };\n\n  let boardState = state.boardReducer;\n\n  // tier reader\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    console.log(userTier);\n\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n\n    console.log(findItem);\n    console.log(findItem.color);\n\n    return findItem.color;\n  };\n\n  // findTier(tierSelect(포인트 데이터))\n  // tier reader end\n\n  // pagination data\n  const items = boardState;\n\n  // styled component\n  let Reply = styled(\"div\")`\n    background-color: #2d4059;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 12px;\n  `;\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg d-flex justify-content-center\">\n          <div style={{ width: \"800px\", marginTop: \"100px\" }}>\n            <div\n              style={{\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                textAlign: \"left\",\n              }}\n            >\n              <span>글 목록</span>\n            </div>\n            {currentItems &&\n              currentItems.map((item, index) => (\n                <Reply\n                  className=\"row\"\n                  key={index}\n                  onClick={() => {\n                    readedBoard(item.bno);\n                    read(item.bno);\n                    readReplyList(item.bno);\n                    readValueList(item.bno);\n                    readCalculateValue(item.bno);\n                    navigate(\"/detail/\" + item.bno);\n                    window.scrollTo(0, 0);\n                  }}\n                >\n                  <div\n                    className=\"col-lg-7\"\n                    style={{\n                      textAlign: \"left\",\n                      textOverflow: \"ellipsis\",\n                      overflow: \"hidden\",\n                      whiteSpace: \"nowrap\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    {item == null ? null : item.title}\n                  </div>\n                  <div\n                    className=\"col-lg-5\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"end\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        width: \"90px\",\n                        paddingRight: \"10px\",\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                      }}\n                    >\n                      {item == null ? null : (\n                        <span>\n                          <RiVipCrownFill\n                            color={findTier(tierSelect(item.point))}\n                          />{\" \"}\n                          {item.writer}\n                        </span>\n                      )}\n                    </span>\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null\n                        ? null\n                        : item.bdate === \"2021/00/00\"\n                        ? null\n                        : String(\n                            new Date(+new Date(item.bdate) + 3240 * 10000)\n                              .toISOString()\n                              .split(\"T\")[0]\n                          )}\n                    </span>\n                    <AiFillLike style={{ color: \"#EA5455\" }} />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.blike}\n                    </span>\n                    <AiFillDislike style={{ color: \"#F07B3F\" }} />\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      {item == null ? null : item.bdislike}\n                    </span>\n                  </div>\n                </Reply>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"30px\",\n          }}\n        >\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n  return (\n    <div>\n      <PaginatedItems itemsPerPage={6} />\n    </div>\n  );\n};\n\nexport default BoardListPagination;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { SiCashapp } from \"react-icons/si\";\nimport styled from \"styled-components\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport noImage from \"../img/noImage.svg\";\nimport { BsFillCaretRightFill, BsPinFill } from \"react-icons/bs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { GrView } from \"react-icons/gr\";\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\nimport ReplyPagination from \"./ReplyPagination\";\nimport BoardListPagination from \"./BoardListPagination\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\n\nconst DetailBoard = (props) => {\n  let navigate = useNavigate();\n\n  let dispatch = useDispatch();\n\n  let { bno } = useParams();\n\n  console.log(\"넘어온 bno는 = \" + bno);\n\n  // cookie\n\n  let csrf = new Cookies().get(\"XSRF-TOKEN\");\n  console.log(csrf);\n\n  // end cookie\n\n  const readList = async () => {\n    await axios.get(\"/readList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n      dispatch({\n        type: \"readList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const getMyInfo = async () => {\n    await axios\n      .get(\"/userinfo\")\n      .then((result) => {\n        console.log(result.data);\n        SetInfo(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  let [userInfo, SetInfo] = useState(\"\");\n\n  const readReplyList = async () => {\n    await axios({\n      url: \"/ReadReplyList\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: \"readReply\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readValueList = async (bno) => {\n    await axios({\n      url: \"/log\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(\"success valuelog\");\n      console.log(res.data);\n      dispatch({\n        type: \"valuelog\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const readCalculateValue = async (bno) => {\n    await axios({\n      url: \"/cal\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(\"success cal\");\n      console.log(res.data);\n      dispatch({\n        type: \"calculate\",\n        payload: res.data,\n      });\n    });\n  };\n\n  const upreadCount = async () => {\n    await axios({\n      url: \"/rcount\",\n      params: {\n        bno: bno,\n      },\n    }).then(async (res) => {\n      console.log(\"success rcount\");\n\n      await readList();\n    });\n  };\n\n  const read = async (bno) => {\n    await axios({\n      url: \"/read\",\n      method: \"get\",\n      params: {\n        bno: bno,\n      },\n    }).then((res) => {\n      console.log(res.data);\n\n      dispatch({\n        type: \"oneboard\",\n        payload: res.data,\n      });\n    });\n  };\n\n  // like, dislike color start\n  // let [likecolor, Setlikecolor] = useState(\"\");\n\n  // let [dislikecolor, Setdislikecolor] = useState(\"\");\n\n  // like, dislike color end\n\n  const readedBoard = async (bno) => {\n    await axios({\n      url: \"/readed\",\n      method: \"get\",\n      params: {\n        bno: bno,\n      },\n    }).then(async (res) => {\n      console.log(\"좋아요 표시기\");\n      console.log(res.data);\n\n      console.log(res.data.checklike === 0 && res.data.checkdislike === 0);\n\n      console.log(res.data.checklike);\n\n      if (!res.data.checklike) {\n        console.log(\"추천 이력 없음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      if (res.data.checklike === 0 && res.data.checkdislike === 0) {\n        console.log(\"추천 이력 있음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      console.log(res.data.checklike === 1 && res.data.checkdislike === 0);\n\n      if (res.data.checklike === 1 && res.data.checkdislike === 0) {\n        console.log(\"추천 이력 있음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"#EA5455\",\n            dislikecolor: \"\",\n          },\n        });\n      }\n\n      console.log(res.data.checklike === 0 && res.data.checkdislike === 1);\n\n      if (res.data.checklike === 0 && res.data.checkdislike === 1) {\n        console.log(\"비추천 이력 없음\");\n        dispatch({\n          type: \"userlikecolor\",\n          payload: {\n            likecolor: \"\",\n            dislikecolor: \"#F07B3F\",\n          },\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    resetBoolean();\n    getMyInfo();\n    read(bno);\n    readedBoard(bno);\n    readValueList(bno);\n    readList();\n    readCalculateValue(bno);\n    upreadCount();\n    readReplyList();\n  }, []);\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let oneBoard = state.oneBoardReducer;\n\n  let valueState = state.valueReducer;\n\n  let calculateValue = state.caculateReducer;\n\n  let usercolor = state.likecolorReducer;\n\n  console.log(usercolor);\n\n  // tier reader\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n    return findItem.color;\n  };\n\n  // findTier(tierSelect(포인트 데이터))\n\n  // tier reader end\n\n  // modal control\n\n  const resetBoolean = () => {\n    setwarnvalueShow(false);\n    setloginLikeShow(false);\n    setloginLikeShow(false);\n    Setwarn(false);\n    SetwarnDuplication(false);\n    SetwarnSelfValue(false);\n    SetwarnMinus(false);\n  };\n\n  const [warnvalueshow, setwarnvalueShow] = useState(false);\n\n  const handleWarnClose = () => setwarnvalueShow(false);\n  const handleWarnShow = () => setwarnvalueShow(true);\n\n  const [loginShow, setloginShow] = useState(false);\n\n  const handleLoginClose = () => setloginShow(false);\n  const handleLoginShow = () => setloginShow(true);\n\n  const [loginLikeShow, setloginLikeShow] = useState(false);\n\n  const handleLoginLikeClose = () => setloginLikeShow(false);\n  const handleLoginLikeShow = () => setloginLikeShow(true);\n\n  const [warn, Setwarn] = useState(false);\n  const [warnDuplication, SetwarnDuplication] = useState(false);\n  const [warnSelfValue, SetwarnSelfValue] = useState(false);\n  const [warnMinus, SetwarnMinus] = useState(false);\n  // modal control end\n\n  useEffect(() => {\n    resetBoolean();\n    readedBoard(bno);\n  }, [oneBoard]);\n\n  // resize screen\n\n  let currentWidth = document.documentElement.clientWidth;\n\n  let [flexdir, Setflexdir] = useState(\"row wrap\");\n\n  useEffect(() => {\n    if (currentWidth > 990) {\n      Setflexdir(\"row wrap\");\n    }\n    if (currentWidth <= 990) {\n      Setflexdir(\"column wrap\");\n    }\n  }, [flexdir, currentWidth]);\n\n  window.addEventListener(\"resize\", () => {\n    let screenWidth = document.documentElement.clientWidth;\n\n    if (screenWidth <= 990) {\n      Setflexdir(\"column wrap\");\n    }\n\n    if (screenWidth > 990) {\n      Setflexdir(\"row wrap\");\n    }\n  });\n\n  ///end resize screen\n\n  // styled component\n  let TopTitle = styled(\"p\")`\n    font-size: 48px;\n  `;\n\n  let Line = styled(\"div\")`\n    width: 80%;\n    height: 5px;\n    background-color: #2d4059;\n    margin: 0 auto;\n  `;\n\n  let Warn = styled(\"p\")`\n    color: red;\n  `;\n  // end styled component\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Wait you feed back !!</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n      <div className=\"container-lg\" style={{ marginTop: \"30px\" }}>\n        <div className=\"row d-flex justify-content-end\">\n          <div\n            className=\"col-4 d-flex justify-content-evenly\"\n            style={{ flexFlow: flexdir }}\n          >\n            <Button\n              style={{\n                marginBottom: \"10px\",\n                backgroundColor: \"#2D4059\",\n                borderStyle: \"none\",\n              }}\n              onClick={() => {\n                navigate(\"/boardmain/\");\n              }}\n            >\n              글목록\n            </Button>\n            {valueState === \"\" ? null : valueState.length > 0 ? null : !(\n                userInfo && oneBoard !== \"\"\n              ) ? null : !(userInfo.nick === oneBoard.writer) ? null : (\n              <Button\n                style={{\n                  marginBottom: \"10px\",\n                  backgroundColor: \"#2D4059\",\n                  borderStyle: \"none\",\n                }}\n                onClick={() => {\n                  navigate(\"/modify/\" + oneBoard.bno);\n                  console.log(oneBoard);\n                }}\n              >\n                글수정\n              </Button>\n            )}\n            {!(userInfo && oneBoard !== \"\") ? null : !(\n                userInfo.nick === oneBoard.writer\n              ) ? null : (\n              <Button\n                onClick={async () => {\n                  await axios({\n                    url: \"/delete\",\n                    method: \"delete\",\n                    params: {\n                      bno: oneBoard.bno,\n                      writer: oneBoard.writer,\n                    },\n                  })\n                    .then((res) => {\n                      navigate(\"/boardmain\");\n                      console.log(res.data);\n                      dispatch({\n                        type: \"deleteBoard\",\n                        payload: res.data,\n                      });\n                    })\n                    .catch((err) => {\n                      console.log(err);\n                      navigate(\"/login\");\n                    });\n                }}\n                style={{\n                  marginBottom: \"10px\",\n                  backgroundColor: \"#F07B3F\",\n                  borderStyle: \"none\",\n                }}\n              >\n                글삭제\n              </Button>\n            )}\n            {oneBoard === \"\" ? null : oneBoard.end === 1 ? null : !(\n                userInfo && oneBoard\n              ) ? null : !(userInfo.nick === oneBoard.writer) ? null : (\n              <Button\n                style={{\n                  marginBottom: \"10px\",\n                  backgroundColor: \"#EA5455\",\n                  borderStyle: \"none\",\n                }}\n                onClick={async () => {\n                  await axios({\n                    url: \"/setPoint\",\n                    method: \"get\",\n                    params: {\n                      bno: oneBoard.bno,\n                      mno: userInfo.mno,\n                    },\n                  }).then((res) => {\n                    console.log(res.data);\n                    console.log(\"value end!!!\");\n                    readList();\n                    readCalculateValue(oneBoard.bno);\n                  });\n\n                  navigate(\"/detail/\" + oneBoard.bno);\n                  read(oneBoard.bno);\n                }}\n              >\n                평가종료\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* detail card */}\n      <div\n        className=\"container-lg d-flex justify-content-center\"\n        style={{ marginTop: \"50px\", height: \"auto\" }}\n      >\n        <Card\n          style={{\n            width: \"800px\",\n            height: \"auto\",\n            color: \"white\",\n            padding: \"10px\",\n          }}\n        >\n          {oneBoard === \"\" ? null : oneBoard.imageList === null ? (\n            <Card.Img\n              variant=\"top\"\n              src={noImage}\n              style={{ border: \"2px solid #2D4059\" }}\n            />\n          ) : (\n            oneBoard.imageList.map((item, index) => {\n              return (\n                <Card.Img\n                  variant=\"top\"\n                  src={item}\n                  key={index}\n                  style={{ border: \"2px solid #2D4059\", marginBottom: \"10px\" }}\n                />\n              );\n            })\n          )}\n          <Card.Body style={{ padding: \"1rem 0\" }}>\n            <div style={{ display: \"flex\" }}>\n              <Card.Title\n                style={{\n                  MaxWidth: \"700px\",\n                  height: \"40px\",\n                  textAlign: \"left\",\n                  backgroundColor: \"#2D4059\",\n                  borderRadius: \"5px\",\n                  padding: \"10px\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {oneBoard === \"\" ? null : oneBoard.title}\n              </Card.Title>\n            </div>\n            <div style={{ display: \"flex\" }}>\n              <p\n                style={{\n                  maxWidth: \"700px\",\n                  height: \"40px\",\n                  backgroundColor: \"#2D4059\",\n                  borderRadius: \"5px\",\n                  padding: \"10px\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {oneBoard === \"\" ? null : (\n                  <span>\n                    <RiVipCrownFill\n                      color={findTier(tierSelect(oneBoard.point))}\n                    />{\" \"}\n                    {oneBoard.writer}\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <Card.Text\n              style={{\n                border: \"2px solid #2D4059\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n              }}\n            >\n              <pre\n                style={{\n                  color: \"black\",\n                  fontSize: \"20px\",\n                  fontFamily: \"'Do Hyeon', sans-serif\",\n                  textAlign: \"left\",\n                  overflow: \"auto\",\n                  whiteSpace: \"pre-wrap\",\n                }}\n              >\n                {oneBoard === \"\" ? null : oneBoard.content}\n              </pre>\n            </Card.Text>\n            <div style={{ marginTop: \"30px\", textAlign: \"left\" }}>\n              {oneBoard === \"\"\n                ? null\n                : oneBoard.tag === \"not\"\n                ? null\n                : oneBoard.tagList.map((item, index) => {\n                    return (\n                      <span\n                        style={{\n                          display: \"inline-block\",\n                          maxWidth: \"700px\",\n                          height: \"40px\",\n                          backgroundColor: \"#2D4059\",\n                          borderRadius: \"5px\",\n                          padding: \"10px\",\n                          marginBottom: \"0\",\n                          marginRight: \"10px\",\n                          textOverflow: \"ellipsis\",\n                          overflow: \"hidden\",\n                          whiteSpace: \"nowrap\",\n                        }}\n                        key={index}\n                      >\n                        #{item}\n                      </span>\n                    );\n                  })}\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      {/* end detail card */}\n\n      {/* start price */}\n      <div className=\"container-lg\">\n        <div className=\"row\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"150px\",\n            }}\n          >\n            <p\n              style={{\n                width: \"100px\",\n                height: \"50px\",\n                backgroundColor: \"#F07B3F\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginTop: \"17px\",\n                fontSize: \"24px\",\n              }}\n            >\n              제시가\n            </p>\n            <BsFillCaretRightFill\n              style={{ color: \"#2D4059\", fontSize: \"32px\" }}\n            />\n            <div\n              style={{\n                color: \"black\",\n                width: \"400px\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                fontFamily: \"sans-serif\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {oneBoard === \"\"\n                ? null\n                : oneBoard.suggestion\n                ? oneBoard.suggestion\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" 원\"\n                : \"없음\"}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"50px\",\n            }}\n          >\n            <p\n              style={{\n                width: \"100px\",\n                height: \"50px\",\n                backgroundColor: \"#FFD460\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginTop: \"17px\",\n                fontSize: \"24px\",\n              }}\n            >\n              최저가\n            </p>\n            <BsFillCaretRightFill\n              style={{ color: \"#2D4059\", fontSize: \"32px\" }}\n            />\n            <div\n              style={{\n                color: \"black\",\n                width: \"400px\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                fontFamily: \"sans-serif\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {!calculateValue.min\n                ? \"없음\"\n                : calculateValue.min\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" 원\"}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"50px\",\n            }}\n          >\n            <p\n              style={{\n                width: \"100px\",\n                height: \"50px\",\n                backgroundColor: \"#EA5455\",\n                borderRadius: \"5px\",\n                padding: \"10px\",\n                marginTop: \"17px\",\n                fontSize: \"24px\",\n              }}\n            >\n              최고가\n            </p>\n            <BsFillCaretRightFill\n              style={{ color: \"#2D4059\", fontSize: \"32px\" }}\n            />\n            <div\n              style={{\n                color: \"black\",\n                width: \"400px\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #2D4059\",\n                fontFamily: \"sans-serif\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {!calculateValue.max\n                ? \"없음\"\n                : calculateValue.max\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" 원\"}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end price */}\n\n      {/* start value log */}\n      <div\n        className=\"container-lg d-flex justify-content-center\"\n        style={{ marginTop: \"50px\" }}\n      >\n        <div style={{ width: \"800px\", marginTop: \"30px\", textAlign: \"left\" }}>\n          <p style={{ fontSize: \"24px\", borderBottom: \"2px solid #2D4059\" }}>\n            <span>평가로그</span>\n          </p>\n          {valueState === \"\" ? (\n            <span>아직 평가가 이루어 지지 않았습니다.</span>\n          ) : valueState.length <= 0 ? (\n            <span>아직 평가가 이루어 지지 않았습니다.</span>\n          ) : (\n            valueState.map((item, index) => {\n              return (\n                <span\n                  style={{\n                    display: \"inline-block\",\n                    maxWidth: \"700px\",\n                    height: \"40px\",\n                    border: \"3px solid #EA5455\",\n                    color: \"black\",\n                    borderRadius: \"5px\",\n                    padding: \"10px\",\n                    marginBottom: \"0\",\n                    lineHeight: \"0\",\n                    marginRight: \"10px\",\n                    overflow: \"hidden\",\n                  }}\n                  key={index}\n                >\n                  {\n                    <span>\n                      <RiVipCrownFill\n                        color={findTier(tierSelect(item.point))}\n                      />{\" \"}\n                      {item.rater}\n                    </span>\n                  }{\" \"}\n                  님{\" \"}\n                  <span\n                    style={{ fontFamily: \"sans-serif\", fontWeight: \"bold\" }}\n                  >\n                    {item.price\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                  </span>{\" \"}\n                  원{\" \"}\n                  {String(\n                    new Date(+new Date(item.vdate) + 3240 * 10000)\n                      .toISOString()\n                      .replace(\"T\", \" \")\n                      .replace(/\\..*/, \"\")\n                  )}\n                </span>\n              );\n            })\n          )}\n        </div>\n      </div>\n      {/* end value log */}\n\n      {/* start value input */}\n      <div\n        className=\"container-lg d-flex justify-content-center\"\n        style={{ marginTop: \"100px\" }}\n      >\n        <div\n          style={{\n            width: \"75%\",\n            height: \"500px\",\n            backgroundColor: \"#FFD460\",\n            display: \"flex\",\n            flexFlow: \"column wrap\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            borderRadius: \"7px\",\n          }}\n        >\n          {oneBoard === \"\" ? null : oneBoard.end === 0 ? (\n            <div\n              style={{\n                width: \"80%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <FaDollarSign style={{ fontSize: \"32px\", color: \"#EA5455\" }} />\n              <div\n                style={{\n                  color: \"black\",\n                  width: \"400px\",\n                  fontSize: \"24px\",\n                  borderBottom: \"2px solid #EA5455\",\n                }}\n              >\n                {!calculateValue.avg ? \"없음\" : \"평균가: \" + calculateValue.avg}\n              </div>\n              <span style={{ fontSize: \"32px\" }}>원</span>\n            </div>\n          ) : null}\n          {oneBoard === \"\" ? null : oneBoard.end === 0 ? (\n            <div style={{ fontSize: \"24px\" }}>\n              {!userInfo.nick ? \"익명\" : userInfo.nick} 님의 <br />\n              평가금액은 ... ?\n            </div>\n          ) : (\n            <div style={{ fontSize: \"24px\" }}>\n              평가가 완료된 게시물입니다.\n              <br />\n              <span style={{ color: \"#EA5455\" }}>최종평가금액은 .. ?</span>\n            </div>\n          )}\n          {oneBoard === \"\" ? null : oneBoard.end === 0 ? (\n            <div style={{ width: \"80%\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <BsPinFill style={{ fontSize: \"32px\", color: \"#EA5455\" }} />\n                <div\n                  style={{ borderBottom: \"2px solid #EA5455\", width: \"60%\" }}\n                >\n                  <input\n                    id=\"price\"\n                    style={{\n                      color: \"black\",\n                      width: \"70%\",\n                      fontSize: \"24px\",\n                      borderStyle: \"none\",\n                      backgroundColor: \"transparent\",\n                      textAlign: \"center\",\n                    }}\n                  />\n                </div>\n                <span style={{ fontSize: \"32px\" }}>원</span>\n              </div>\n              {warn ? (\n                <Warn>\n                  값을 입력하지 않았거나 입력한 값이 숫자가 아닙니다. 다시\n                  입력해주세요.\n                </Warn>\n              ) : null}\n              {warnMinus ? (\n                <Warn>음수의 값은 입력하실 수 없습니다!</Warn>\n              ) : null}\n              {warnDuplication ? (\n                <Warn>\n                  이미 평가한 게시물입니다. 다른 게시물을 평가해보세요!\n                </Warn>\n              ) : null}\n              {warnSelfValue ? (\n                <Warn>자신의 게시물에는 평가할 수 없습니다!</Warn>\n              ) : null}\n              <Button\n                onClick={async () => {\n                  let number = /[0-9]/; // 숫자 체크\n                  let price = document.getElementById(\"price\");\n\n                  Setwarn(false);\n                  SetwarnMinus(false);\n\n                  if (!price.value || !number.test(price.value)) {\n                    console.log(\"no value\");\n                    Setwarn(true);\n                    return;\n                  } else {\n                    Setwarn(false);\n                  }\n\n                  if (parseInt(price.value) < 0) {\n                    SetwarnMinus(true);\n                    return;\n                  } else {\n                    SetwarnMinus(false);\n                  }\n\n                  if (!userInfo) {\n                    handleLoginShow();\n                    return;\n                  }\n\n                  handleWarnShow();\n                }}\n                style={{\n                  marginTop: \"30px\",\n                  backgroundColor: \"#EA5455\",\n                  borderStyle: \"none\",\n                }}\n              >\n                평가입력\n              </Button>\n            </div>\n          ) : (\n            <div style={{ width: \"80%\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <BsPinFill style={{ fontSize: \"32px\", color: \"#EA5455\" }} />\n                <div\n                  style={{ borderBottom: \"2px solid #EA5455\", width: \"60%\" }}\n                >\n                  <span\n                    style={{\n                      fontFamily: \"sans-serif\",\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                      width: \"70%\",\n                      fontSize: \"24px\",\n                      borderStyle: \"none\",\n                      backgroundColor: \"transparent\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {calculateValue.avg >= 0\n                      ? calculateValue.avg\n                          .toString()\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      : null}\n                  </span>\n                </div>\n                <span style={{ fontSize: \"32px\" }}>원</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"container-lg d-flex justify-content-center\">\n        <div style={{ display: \"flex\", width: \"800px\", justifyContent: \"end\" }}>\n          <div style={{ fontSize: \"24px\" }}>\n            <GrView />\n            <span style={{ padding: \"0 10px\" }}>\n              {oneBoard === \"\" ? null : oneBoard.rcount}\n            </span>\n            <AiFillLike\n              color={usercolor.likecolor}\n              onClick={async (e) => {\n                if (!userInfo) {\n                  handleLoginLikeShow();\n                  return;\n                }\n                await axios({\n                  url: \"/like\",\n                  method: \"get\",\n                  params: {\n                    mno: userInfo.mno,\n                    bno: oneBoard.bno,\n                  },\n                }).then((res) => {\n                  if (res.data.checklike === 0 && res.data.checkdislike === 0) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"\",\n                        dislikecolor: \"\",\n                      },\n                    });\n                  }\n\n                  if (res.data.checklike === 1 && res.data.checkdislike === 0) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"#EA5455\",\n                        dislikecolor: \"\",\n                      },\n                    });\n                  }\n                  if (res.data.checklike === 0 && res.data.checkdislike === 1) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"\",\n                        dislikecolor: \"#F07B3F\",\n                      },\n                    });\n                  }\n\n                  read(bno);\n                  readList();\n                });\n              }}\n              style={{ cursor: \"pointer\" }}\n            />\n            <span style={{ padding: \"0 10px\" }}>\n              {oneBoard === \"\" ? null : oneBoard.blike}\n            </span>\n            <AiFillDislike\n              color={usercolor.dislikecolor}\n              onClick={async (e) => {\n                if (!userInfo) {\n                  handleLoginLikeShow();\n                  return;\n                }\n                await axios({\n                  url: \"/dislike\",\n                  method: \"get\",\n                  params: {\n                    mno: userInfo.mno,\n                    bno: oneBoard.bno,\n                  },\n                }).then((res) => {\n                  if (res.data.checklike === 0 && res.data.checkdislike === 0) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"\",\n                        dislikecolor: \"\",\n                      },\n                    });\n                  }\n                  if (res.data.checklike === 1 && res.data.checkdislike === 0) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"#EA5455\",\n                        dislikecolor: \"\",\n                      },\n                    });\n                  }\n                  if (res.data.checklike === 0 && res.data.checkdislike === 1) {\n                    dispatch({\n                      type: \"userlikecolor\",\n                      payload: {\n                        likecolor: \"\",\n                        dislikecolor: \"#F07B3F\",\n                      },\n                    });\n                  }\n\n                  read(bno);\n                  readList();\n                });\n              }}\n              style={{ cursor: \"pointer\" }}\n            />\n            <span style={{ padding: \"0 10px\" }}>\n              {oneBoard === \"\" ? null : oneBoard.bdislike}\n            </span>\n          </div>\n        </div>\n      </div>\n      {/* end value input */}\n\n      {/* start reply box */}\n      <ReplyPagination bno={bno} />\n      <div className=\"container-lg d-flex justify-content-center\">\n        <div style={{ width: \"100%\" }}>\n          <textarea\n            id=\"rcontent\"\n            placeholder=\"댓글을 입력하세요\"\n            style={{ width: \"70%\", height: \"100px\", resize: \"none\" }}\n          />\n          <div style={{ display: \"flex\", justifyContent: \"end\", width: \"85%\" }}>\n            <Button\n              onClick={async () => {\n                let rcontent = document.getElementById(\"rcontent\");\n\n                await axios({\n                  url: \"http://localhost:3000/InsertReply\",\n                  method: \"post\",\n                  data: {\n                    mno: userInfo ? userInfo.mno : null,\n                    bno: oneBoard.bno,\n                    replyer: userInfo.nick ? userInfo.nick : \"anonymous\",\n                    rcontent: rcontent.value,\n                  },\n                  headers: {\n                    \"XSRF-TOKEN\": csrf,\n                  },\n                }).then((res) => {\n                  console.log(res);\n                  dispatch({\n                    type: \"insertReply\",\n                    payload: res.data,\n                  });\n                  rcontent.value = \"\";\n                });\n              }}\n              style={{ backgroundColor: \"#EA5455\", borderStyle: \"none\" }}\n            >\n              댓글등록\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* end reply box */}\n\n      {/* start board list box */}\n      <BoardListPagination />\n      {/* end reply box */}\n\n      {/* warn value modal start */}\n      <Modal\n        show={warnvalueshow}\n        onHide={handleWarnClose}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>⚠️ 주의 ⚠️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          정말로 이 가격으로 평가하시겠습니까?\n          <br />\n          평가하신 금액은 추후 변경할 수 없습니다.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleWarnClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={async () => {\n              let price = document.getElementById(\"price\");\n\n              await axios({\n                url: \"/RegisterValue\",\n                method: \"POST\",\n                data: {\n                  bno: oneBoard.bno,\n                  price: price.value,\n                },\n              }).then((res) => {\n                if (res.data === \"\") {\n                  console.log(\"same user\");\n                  SetwarnDuplication(true);\n                  readValueList();\n                  handleWarnClose();\n                } else if (res.data[0].price === -1) {\n                  console.log(\"자신의 게시물임\");\n                  SetwarnSelfValue(true);\n                  readValueList();\n                  handleWarnClose();\n                } else {\n                  console.log(res.data);\n                  dispatch({\n                    type: \"valuelog\",\n                    payload: res.data,\n                  });\n                }\n              });\n\n              await readCalculateValue(oneBoard.bno);\n\n              price.value = \"\";\n\n              handleWarnClose();\n            }}\n          >\n            평가확정\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* warn value modal end */}\n\n      {/* login modal start */}\n      <Modal\n        show={loginShow}\n        onHide={handleLoginShow}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>⚠️ 로그인이 필요한 서비스입니다! ⚠️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          평가를 하시려면 로그인이 필요합니다.\n          <br />\n          로그인을 하시거나 회원이 아니시라면 회원가입 후 이용 부탁드립니다.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleLoginClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleLoginClose();\n              navigate(\"/login\");\n            }}\n          >\n            로그인하러 가기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* login modal end */}\n\n      {/* likelogin modal start */}\n      <Modal\n        show={loginLikeShow}\n        onHide={handleLoginLikeShow}\n        style={{ fontFamily: \"'Do Hyeon', sans-serif\" }}\n      >\n        <Modal.Header>\n          <Modal.Title>⚠️ 로그인이 필요한 서비스입니다! ⚠️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          좋아요 및 싫어요를 하시려면 로그인이 필요합니다.\n          <br />\n          로그인을 하시거나 회원이 아니시라면 회원가입 후 이용 부탁드립니다.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleLoginLikeClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleLoginLikeClose();\n              navigate(\"/login\");\n            }}\n          >\n            로그인하러 가기\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* likelogin modal end */}\n    </div>\n  );\n};\n\nexport default DetailBoard;\n","import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FaRegHandPointRight } from \"react-icons/fa\";\nimport { MdNotificationImportant } from \"react-icons/md\";\nimport { RiVipCrownFill } from \"react-icons/ri\";\nimport { IoWallet } from \"react-icons/io5\";\nimport { BiCoinStack } from \"react-icons/bi\";\nimport axios from \"axios\";\n\nconst Mypage = () => {\n  let navigate = useNavigate();\n\n  const getMyInfo = async () => {\n    await axios\n      .get(\"/userinfo\")\n      .then((result) => {\n        console.log(result.data);\n        SetInfo(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        navigate(\"/login\");\n        // navigate(\"/login\");\n      });\n  };\n\n  useEffect(() => {\n    getMyInfo();\n  }, []);\n\n  let [userInfo, SetInfo] = useState(\"\");\n\n  const tierSelect = (point) => {\n    if (point < 250) {\n      // SetTier(\"Bronze\");\n      return \"Bronze\";\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return \"Silver\";\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return \"Gold\";\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return \"Platinum\";\n    } else {\n      // SetTier(\"Diamond\");\n      return \"Diamond\";\n    }\n  };\n\n  const pointGap = (point) => {\n    if (point < 250) {\n      return 250 - point;\n    } else if (point < 500) {\n      // SetTier(\"Silver\");\n      return 500 - point;\n    } else if (point < 750) {\n      // SetTier(\"Gold\");\n      return 750 - point;\n    } else if (point < 1000) {\n      // SetTier(\"Platinum\");\n      return 1000 - point;\n    } else {\n      // SetTier(\"Diamond\");\n      return \"super\";\n    }\n  };\n\n  let [boardRank, SetboardRank] = useState([]);\n\n  let [memberRank, SetmemberRank] = useState([]);\n\n  const getBoardRank = async () => {\n    await axios\n      .get(\"/BoardRank\")\n      .then((result) => {\n        console.log(result.data);\n        SetboardRank(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"board rank err\");\n      });\n  };\n\n  const getTierRank = async () => {\n    await axios\n      .get(\"/TierRank\")\n      .then((result) => {\n        console.log(result.data);\n        SetmemberRank(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"tier rank err\");\n      });\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getBoardRank();\n    getTierRank();\n  }, []);\n\n  const tierObject = [\n    { tier: \"Diamond\", color: \"#548CFF\" },\n    { tier: \"Platinum\", color: \"#00BDAA\" },\n    { tier: \"Gold\", color: \"#FFE300\" },\n    { tier: \"Silver\", color: \"#C8C2BC\" },\n    { tier: \"Bronze\", color: \"#E26A2C\" },\n  ];\n\n  const findTier = (userTier) => {\n    console.log(userTier);\n\n    let findItem = tierObject.find((item) => {\n      return item.tier === userTier;\n    });\n\n    console.log(findItem);\n    console.log(findItem.color);\n\n    return findItem.color;\n  };\n\n  // let sampleData = [\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     score: 0,\n  //     posting: 0,\n  //   },\n  // ];\n\n  // let sampleData2 = [\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"diamond\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"platinum\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"platinum\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"gold\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"gold\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"gold\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"silver\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"silver\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"bronze\",\n  //     point: 0,\n  //   },\n  //   {\n  //     nick: \"user01\",\n  //     tier: \"bronze\",\n  //     point: 0,\n  //   },\n  // ];\n\n  // useEffect(() => {\n  //   SetboardRank(sampleData);\n  //   SetmemberRank(sampleData2);\n  // }, []);\n\n  // styled component\n  let TopTitle = styled(\"p\")`\n    font-size: 48px;\n  `;\n\n  let Line = styled(\"div\")`\n    width: 80%;\n    height: 5px;\n    background-color: #2d4059;\n    margin: 0 auto;\n  `;\n\n  let SmallLine = styled(\"div\")`\n    width: 70%;\n    height: 3px;\n    background-color: #2d4059;\n    margin: 70px auto;\n  `;\n  // end styled component\n\n  console.log(boardRank);\n  console.log(memberRank);\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check your point !!</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n\n      {/* start tier */}\n      <div className=\"container-lg \" style={{ marginTop: \"50px\" }}>\n        <div\n          className=\"row\"\n          style={{\n            border: \"2px solid #EA5455\",\n            borderRadius: \"7px\",\n            margin: \"0 20px\",\n          }}\n        >\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <MdNotificationImportant style={{ fontSize: \"20px\" }} />\n            <span style={{ margin: \"0 10px\" }}>회원등급표</span>{\" \"}\n            <FaRegHandPointRight />\n          </div>\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RiVipCrownFill color=\"#548CFF\" />\n            <span style={{ margin: \"0 10px\" }}>다이아</span>\n            <span>1000점</span>\n          </div>\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RiVipCrownFill color=\"#00BDAA\" />\n            <span style={{ margin: \"0 10px\" }}>플래티넘</span>\n            <span>750점</span>\n          </div>\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RiVipCrownFill color=\"#FFE300\" />\n            <span style={{ margin: \"0 10px\" }}>골드</span>\n            <span>500점</span>\n          </div>\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RiVipCrownFill color=\"#C8C2BC\" />\n            <span style={{ margin: \"0 10px\" }}>실버</span>\n            <span>250점</span>\n          </div>\n          <div\n            className=\"col-lg-2\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RiVipCrownFill color=\"#E26A2C\" />\n            <span style={{ margin: \"0 10px\" }}>브론즈</span>\n            <span>0점</span>\n          </div>\n        </div>\n      </div>\n      {/* end tier */}\n\n      {/* start value input */}\n      <div\n        className=\"container-lg d-flex justify-content-center\"\n        style={{ marginTop: \"100px\" }}\n      >\n        <div\n          style={{\n            width: \"80%\",\n            height: \"500px\",\n            border: \"3px solid #2D4059\",\n            display: \"flex\",\n            flexFlow: \"column wrap\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            borderRadius: \"7px\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"24px\",\n              display: \"flex\",\n              width: \"100%\",\n              justifyContent: \"center\",\n            }}\n          >\n            <IoWallet\n              color=\"#EA5455\"\n              size={\"32px\"}\n              style={{ marginRight: \"1%\" }}\n            />\n            <span>{userInfo.nick} 님의 포인트는 ... ?</span>\n          </div>\n          <div\n            style={{\n              width: \"70%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <BiCoinStack style={{ fontSize: \"32px\", color: \"#EA5455\" }} />\n            <div\n              style={{\n                color: \"black\",\n                width: \"50%\",\n                fontSize: \"24px\",\n                borderBottom: \"2px solid #EA5455\",\n              }}\n            >\n              {userInfo.point}\n            </div>\n            <span style={{ fontSize: \"32px\" }}>point</span>\n          </div>\n          <div style={{ fontSize: \"24px\" }}>{userInfo.nick} 님의 등급은</div>\n          <RiVipCrownFill\n            size=\"48px\"\n            color={findTier(tierSelect(userInfo.point))}\n          />\n          <div style={{ fontSize: \"24px\" }}>\n            {pointGap(userInfo.point) === \"super\"\n              ? \"이미 최고 등급입니다! 현재 점수 : \" + userInfo.point\n              : \"다음 등급까지 \" +\n                pointGap(userInfo.point) +\n                \" 포인트 남았습니다!\"}\n          </div>\n          <div>\n            <p>\n              자신만의 아이디어나 일상 등을 공유하여 더 많은 포인트를 얻어보세요\n              !!\n            </p>\n          </div>\n        </div>\n      </div>\n      {/* end value input */}\n\n      <SmallLine></SmallLine>\n\n      {/* start rank */}\n      <div className=\"container-lg\" style={{ paddingBottom: \"100px\" }}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\" style={{ marginTop: \"30px\" }}>\n            <div\n              style={{ textAlign: \"left\", fontSize: \"24px\", padding: \"10px 0\" }}\n            >\n              게시물 랭킹\n            </div>\n            <div\n              style={{\n                border: \"3px solid #2D4059\",\n                borderRadius: \"7px\",\n                backgroundColor: \"#2D4059\",\n                padding: \"10px\",\n                display: \"flex\",\n                flexFlow: \"column wrap\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  margin: \"10px 0\",\n                }}\n              >\n                <div\n                  style={{\n                    width: \"40px\",\n                    backgroundColor: \"#FFD460\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  순위\n                </div>\n                <div\n                  style={{\n                    width: \"200px\",\n                    backgroundColor: \"#FFD460\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  닉네임\n                </div>\n                <div\n                  style={{\n                    width: \"100px\",\n                    backgroundColor: \"#EA5455\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  인기도\n                </div>\n              </div>\n              {boardRank.map((item, index) => {\n                return (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-around\",\n                      margin: \"10px 0\",\n                    }}\n                    key={index}\n                  >\n                    <div\n                      style={{\n                        width: \"40px\",\n                        backgroundColor: \"#FFD460\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {index + 1}\n                    </div>\n                    <div\n                      style={{\n                        width: \"200px\",\n                        backgroundColor: \"#FFD460\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {item.nick}\n                    </div>\n                    <div\n                      style={{\n                        width: \"100px\",\n                        backgroundColor: \"#EA5455\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {item.score}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"col-lg-6\" style={{ marginTop: \"30px\" }}>\n            <div\n              style={{ textAlign: \"left\", fontSize: \"24px\", padding: \"10px 0\" }}\n            >\n              포인트 랭킹\n            </div>\n            <div\n              style={{\n                border: \"3px solid #2D4059\",\n                borderRadius: \"7px\",\n                backgroundColor: \"#2D4059\",\n                padding: \"10px\",\n                display: \"flex\",\n                flexFlow: \"column wrap\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  margin: \"10px 0\",\n                }}\n              >\n                <div\n                  style={{\n                    width: \"40px\",\n                    backgroundColor: \"#FFD460\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  순위\n                </div>\n                <div\n                  style={{\n                    width: \"100px\",\n                    backgroundColor: \"#FFD460\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  닉네임\n                </div>\n                <div\n                  style={{\n                    width: \"100px\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  등급\n                </div>\n                <div\n                  style={{\n                    width: \"100px\",\n                    backgroundColor: \"#EA5455\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  포인트\n                </div>\n              </div>\n              {memberRank.map((item, index) => {\n                return (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-around\",\n                      margin: \"10px 0\",\n                    }}\n                    key={index}\n                  >\n                    <div\n                      style={{\n                        width: \"40px\",\n                        backgroundColor: \"#FFD460\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {index + 1}\n                    </div>\n                    <div\n                      style={{\n                        width: \"100px\",\n                        backgroundColor: \"#FFD460\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {item.nick}\n                    </div>\n                    <div\n                      style={{\n                        width: \"100px\",\n                        backgroundColor: \"white\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      <RiVipCrownFill\n                        color={findTier(item.tier)}\n                        style={{ marginRight: \"10px\" }}\n                      />\n                      {item.tier}\n                    </div>\n                    <div\n                      style={{\n                        width: \"100px\",\n                        backgroundColor: \"#EA5455\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {item.point}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Mypage;\n","import React, { useEffect, useState } from \"react\";\nimport { SiCashapp } from \"react-icons/si\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ItemCard from \"./ItemCard\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nlet TopTitle = styled(\"p\")`\n  font-size: 48px;\n`;\n\nlet Line = styled(\"div\")`\n  width: 80%;\n  height: 5px;\n  background-color: #2d4059;\n  margin: 0 auto;\n`;\n\nconst HotBoardMain = () => {\n  let dispatch = useDispatch();\n\n  const checkLogin = async () => {\n    await axios\n      .get(\"/checklogin\")\n      .then((result) => {\n        SetCheckUser(result.data);\n        console.log(result.data);\n      })\n      .catch((err) => {\n        console.log(\"please login\");\n      });\n  };\n\n  let [checkUser, SetCheckUser] = useState(\"\");\n\n  const readHotList = async () => {\n    await axios.get(\"/hotList\").then((res) => {\n      console.log(\"success\");\n      console.log(res.data);\n      dispatch({\n        type: \"readHotList\",\n        payload: res.data,\n      });\n    });\n  };\n\n  // const readHotList = async () =>{\n  //   await axios.get(\"http://localhost:8181/readList\")\n  // }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    checkLogin();\n    readHotList();\n  }, []);\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  let hotBoardState = state.hotBoardReducer;\n\n  // pagination data\n  const items = hotBoardState;\n\n  let [select, SetSelect] = useState(\"\");\n  let [search, SetSearch] = useState(\"\");\n\n  const typeChanger = (select) => {\n    if (select === \"제목\") {\n      return \"title\";\n    } else if (select === \"내용\") {\n      return \"content\";\n    } else if (select === \"작성자\") {\n      return \"writer\";\n    } else if (select === \"태그\") {\n      return \"tag\";\n    }\n  };\n\n  let navigate = useNavigate();\n\n  // pagination\n  function Items({ currentItems }) {\n    return (\n      <>\n        <div className=\"container-lg\" style={{ margin: \"50px auto\" }}>\n          <div className=\"row\">\n            {currentItems === \"\" ? (\n              <p style={{ fontSize: \"32px\" }}>관련 게시물이 없습니다.</p>\n            ) : (\n              currentItems &&\n              currentItems.map((item, index) => (\n                <div\n                  className=\"col-lg-4 d-flex justify-content-center\"\n                  key={index}\n                >\n                  <div\n                    onClick={() => {\n                      navigate(\"/detail/\" + item.bno);\n                      console.log(item);\n                    }}\n                  >\n                    <ItemCard item={item} />\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function PaginatedItems({ itemsPerPage }) {\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0);\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        <Items currentItems={currentItems} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <ReactPaginate\n            nextLabel=\">\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={0}\n            pageCount={pageCount}\n            previousLabel=\"<\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        </div>\n      </>\n    );\n  }\n  // end pagination\n\n  return (\n    <div>\n      <div className=\"cotainer-lg\">\n        <div\n          className=\"row d-flex justify-content-center\"\n          style={{ width: \"100%\", paddingTop: \"50px\" }}\n        >\n          <div\n            className=\"col-lg-1\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n            style={{ marginBottom: \"20px\", cursor: \"pointer\" }}\n          >\n            <SiCashapp\n              style={{ color: \"#EA5455\", fontSize: \"70px\", margin: \"0 20px\" }}\n            />\n          </div>\n          <div className=\"col-lg-9\">\n            <TopTitle>Check Hot items & Feed back</TopTitle>\n          </div>\n        </div>\n      </div>\n      <Line></Line>\n      <div\n        className=\"container-lg\"\n        style={{\n          padding: \"30px 30px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ marginRight: \"20px\" }}>\n            <select\n              id=\"tagSelect\"\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              onChange={(e) => {\n                SetSelect(\n                  typeChanger(e.target.options[e.target.selectedIndex].text)\n                );\n              }}\n            >\n              <option defaultValue>검색항목</option>\n              <option value=\"1\">제목</option>\n              <option value=\"2\">내용</option>\n              <option value=\"3\">작성자</option>\n              <option value=\"4\">태그</option>\n            </select>\n          </div>\n          <input id=\"search\" type=\"text\" placeholder=\"검색어를 입력해주세요\" />\n          <FaSearch\n            onClick={async () => {\n              let search = document.getElementById(\"search\").value;\n              SetSearch(search);\n\n              console.log(search, select);\n\n              if (search === \"\" && select === \"\") {\n                console.log(\"검색항목을 선택하고 검색어를 입력해주세요\");\n                return;\n              }\n\n              await axios({\n                url: \"/getSearchList\",\n                method: \"get\",\n                params: {\n                  type: select,\n                  keyword: search,\n                },\n              }).then((res) => {\n                console.log(res.data);\n                dispatch({\n                  type: \"searchHotList\",\n                  payload: res.data,\n                });\n              });\n            }}\n            style={{ fontSize: \"24px\", marginLeft: \"10px\", cursor: \"pointer\" }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              if (checkUser) {\n                navigate(\"/register\");\n              } else {\n                navigate(\"/login\");\n              }\n            }}\n          >\n            글등록\n          </Button>\n        </div>\n      </div>\n      <PaginatedItems itemsPerPage={6} />\n    </div>\n  );\n};\n\nexport default HotBoardMain;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Mainpage from \"./components/Mainpage\";\nimport LoginPage from \"./components/LoginPage\";\nimport Account from \"./components/Account\";\nimport Welcome from \"./components/Welcome\";\nimport BoardMain from \"./components/BoardMain\";\nimport Register from \"./components/Register\";\nimport Modify from \"./components/Modify\";\nimport DetailBoard from \"./components/DetailBoard\";\nimport Mypage from \"./components/Mypage\";\nimport TestLogin from \"./components/TestLogin\";\nimport HotBoardMain from \"./components/HotBoardMain\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Mainpage />} />\n        <Route path=\"/:login\" element={<Mainpage />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/account\" element={<Account />} />\n        <Route path=\"/welcome\" element={<Welcome />} />\n        <Route path=\"/boardmain\" element={<BoardMain />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/detail/:bno\" element={<DetailBoard />} />\n        <Route path=\"/modify/:bno\" element={<Modify />} />\n        <Route path=\"/mypage\" element={<Mypage />} />\n        <Route path=\"/hotboard\" element={<HotBoardMain />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\n// cookie\n\nlet csrf = new Cookies().get(\"XSRF-TOKEN\");\nconsole.log(csrf);\n\n// end cookie\n\n// axios.defaults.xsrfCookieName = \"XSRF-TOKEN\";\n// axios.defaults.xsrfHeaderName = \"X-CSRF-TOKEN\";\n// axios.defaults.headers.common['X-CSRF-TOKEN'] = token;\n\nlet board = \"\";\n\nlet oneBoard = \"\";\n\nlet reply = \"\";\n\nlet hotBoard = \"\";\n\nlet value = \"\";\n\nlet calculate = \"\";\n\nlet likecolor = \"\";\n\n// const login = async (username, password) => {\n//   await axios\n//     .post(API_URL + \"/login\", {\n//       username: username,\n//       password: password,\n//     })\n//     .then((result) => {\n//       console.log(\"success login\");\n//       console.log(result.data);\n//     })\n//     .catch((error) => {\n//       console.log(\"login error\");\n//       console.log(error);\n//     });\n// };\n\nfunction boardReducer(state = board, actions) {\n  if (actions.type === \"readList\") {\n    console.log(\"readList\");\n\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  if (actions.type === \"deleteBoard\") {\n    console.log(\"deleteBoard\");\n\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n\n  if (actions.type === \"searchList\") {\n    console.log(\"searchList\");\n\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n\n  return state;\n}\n\nfunction oneBoardReducer(state = oneBoard, actions) {\n  if (actions.type === \"oneboard\") {\n    let copy = { ...state };\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  return state;\n}\n\nfunction hotBoardReducer(state = hotBoard, actions) {\n  if (actions.type === \"readHotList\") {\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n\n  if (actions.type === \"searchHotList\") {\n    console.log(\"searchList\");\n\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  return state;\n}\n\nfunction replyReducer(state = reply, actions) {\n  if (actions.type === \"readReply\") {\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  if (actions.type === \"insertReply\") {\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  if (actions.type === \"deleteReply\") {\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  return state;\n}\n\nfunction valueReducer(state = value, actions) {\n  if (actions.type === \"valuelog\") {\n    let copy = [...state];\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  return state;\n}\n\nfunction caculateReducer(state = calculate, actions) {\n  if (actions.type === \"calculate\") {\n    let copy = { ...state };\n\n    copy = actions.payload;\n\n    return copy;\n  }\n  if (actions.type === \"resetcal\") {\n    let copy = { ...state };\n\n    copy = \"\";\n\n    return copy;\n  }\n  return state;\n}\n\nfunction likecolorReducer(state = likecolor, actions) {\n  if (actions.type === \"userlikecolor\") {\n    let copy = \"\";\n\n    copy = { ...actions.payload };\n\n    return copy;\n  }\n  return state;\n}\n\nlet store = createStore(\n  combineReducers({\n    boardReducer,\n    oneBoardReducer,\n    hotBoardReducer,\n    replyReducer,\n    valueReducer,\n    caculateReducer,\n    likecolorReducer,\n  })\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/HowMuch_No_DB\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}